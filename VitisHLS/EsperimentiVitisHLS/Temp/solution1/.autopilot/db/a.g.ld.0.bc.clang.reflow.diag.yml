--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: source/aead.c, Line: 64, Column: 19 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_64_7
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: source/aead.c, Line: 43, Column: 20 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_43_3
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: source/word.h, Line: 29, Column: 19 }
Function:        STOREBYTES
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_29_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: source/word.h, Line: 22, Column: 19 }
Function:        LOADBYTES
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_22_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_64_7
  - String:          ''' ('
  - LoopLoc:         'source/aead.c:64:19'
  - String:          ') '
  - String:          'in function '''
  - String:          crypto_aead_encrypt
  - String:          ''' completely with a factor of '
  - Factor:          '2'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_43_3
  - String:          ''' ('
  - LoopLoc:         'source/aead.c:43:20'
  - String:          ') '
  - String:          'in function '''
  - String:          crypto_aead_encrypt
  - String:          ''' completely with a factor of '
  - Factor:          '2'
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: source/round.h, Line: 12, Column: 0 }
Function:        ROUND.6
Args:            
  - String:          'Inlining function '''
  - Callee:          ROR
    DebugLoc:        { File: source/round.h, Line: 8, Column: 0 }
  - String:          ''' into '''
  - Caller:          ROUND.6
    DebugLoc:        { File: source/round.h, Line: 12, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Inlining function '''
  - Callee:          P12
    DebugLoc:        { File: source/permutations.h, Line: 11, Column: 0 }
  - String:          ''' into '''
  - Caller:          crypto_aead_encrypt
    DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Inlining function '''
  - Callee:          P6
    DebugLoc:        { File: source/permutations.h, Line: 37, Column: 0 }
  - String:          ''' into '''
  - Caller:          crypto_aead_encrypt
    DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Inlining function '''
  - Callee:          STOREBYTES
    DebugLoc:        { File: source/word.h, Line: 27, Column: 0 }
  - String:          ''' into '''
  - Caller:          crypto_aead_encrypt
    DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_29_1
  - String:          ''' ('
  - LoopLoc:         'source/word.h:29:19'
  - String:          ') '
  - String:          'in function '''
  - String:          crypto_aead_encrypt
  - String:          ''' completely with a factor of '
  - Factor:          '8'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_29_1
  - String:          ''' ('
  - LoopLoc:         'source/word.h:29:19'
  - String:          ') '
  - String:          'in function '''
  - String:          crypto_aead_encrypt
  - String:          ''' completely with a factor of '
  - Factor:          '8'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_29_1
  - String:          ''' ('
  - LoopLoc:         'source/word.h:29:19'
  - String:          ') '
  - String:          'in function '''
  - String:          crypto_aead_encrypt
  - String:          ''' completely with a factor of '
  - Factor:          '8'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
Function:        crypto_aead_encrypt
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_29_1
  - String:          ''' ('
  - LoopLoc:         'source/word.h:29:19'
  - String:          ') '
  - String:          'in function '''
  - String:          crypto_aead_encrypt
  - String:          ''' completely with a factor of '
  - Factor:          '8'
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
Function:        crypto_aead_encrypt
Args:            
  - String:          'Sequential '
  - Direction:       write
  - String:          ' of length '
  - Length:          '32'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        c38seq
  - ArrayName:       c
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        crypto_aead_encrypt
    DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.86
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.90
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.94
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.98
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.102
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.106
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.110
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.113
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.129
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.133
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.137
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.141
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.145
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.149
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.153
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.156
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.198
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.202
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.206
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.210
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.214
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.218
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.222
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.225
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.230
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.234
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.238
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.242
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.246
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.250
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.254
  - OrigAccess:      store
    DebugLoc:        { File: source/word.h, Line: 29, Column: 52 }
  - OrigDirection:   write
  - OrigID:          entry.store.257
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: source/word.h, Line: 22, Column: 19 }
Function:        LOADBYTES
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgepseq
  - ArrayName:       bytes
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_22_1
  - String:          ' '
  - LoopLoc:         'source/word.h:22:19'
  - String:          ' '
  - Function:        LOADBYTES
    DebugLoc:        { File: source/word.h, Line: 19, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: source/word.h, Line: 22, Column: 60 }
  - OrigDirection:   read
  - OrigID:          for.inc.load.7
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
Function:        crypto_aead_encrypt
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
  - OrigDirection:   write
  - OrigID:          c38seq
  - ArrayName:       c
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        crypto_aead_encrypt
    DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: source/word.h, Line: 22, Column: 19 }
Function:        LOADBYTES
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: source/word.h, Line: 22, Column: 19 }
  - OrigDirection:   read
  - OrigID:          scevgepseq
  - ArrayName:       bytes
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_22_1
  - String:          ' '
  - LoopLoc:         'source/word.h:22:19'
  - String:          ' '
  - Function:        LOADBYTES
    DebugLoc:        { File: source/word.h, Line: 19, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: source/word.h, Line: 22, Column: 19 }
Function:        LOADBYTES
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_22_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: source/word.h, Line: 22, Column: 19 }
Function:        LOADBYTES
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_22_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: source/word.h, Line: 22, Column: 19 }
Function:        LOADBYTES.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_22_1
  - String:          ' '
  - LoopLoc:         'source/word.h:22:19'
  - String:          ' '
  - Function:        LOADBYTES.1
    DebugLoc:        { File: source/word.h, Line: 19, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: source/word.h, Line: 22, Column: 19 }
Function:        LOADBYTES.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '8'
  - String:          ' in loop '''
  - LoopName:        VITIS_LOOP_22_1
  - String:          '''('
  - LoopLoc:         'source/word.h:22:19'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
Function:        crypto_aead_encrypt.1
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of length '
  - Length:          '32'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        crypto_aead_encrypt.1
    DebugLoc:        { File: source/aead.c, Line: 12, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
Function:        crypto_aead_encrypt.1
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of length '
  - Length:          '32'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: source/word.h, Line: 22, Column: 19 }
Function:        LOADBYTES.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_22_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
