// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module axi_encrypt_crypto_aead_encrypt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_0_address0,
        c_0_ce0,
        c_0_we0,
        c_0_d0,
        c_1_address0,
        c_1_ce0,
        c_1_we0,
        c_1_d0,
        c_2_address0,
        c_2_ce0,
        c_2_we0,
        c_2_d0,
        c_3_address0,
        c_3_ce0,
        c_3_we0,
        c_3_d0,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        p_read32,
        p_read33,
        p_read34,
        p_read35,
        p_read36,
        p_read37,
        p_read38,
        p_read39,
        p_read40,
        p_read41,
        p_read42,
        p_read43,
        p_read44,
        p_read45,
        p_read46,
        p_read47,
        p_read48,
        p_read49,
        p_read50,
        p_read51,
        p_read52,
        p_read53,
        p_read54,
        p_read55,
        p_read56,
        p_read57,
        p_read58,
        p_read59,
        p_read60,
        p_read61,
        p_read62,
        p_read63,
        p_read64
);

parameter    ap_ST_fsm_state1 = 55'd1;
parameter    ap_ST_fsm_state2 = 55'd2;
parameter    ap_ST_fsm_state3 = 55'd4;
parameter    ap_ST_fsm_state4 = 55'd8;
parameter    ap_ST_fsm_state5 = 55'd16;
parameter    ap_ST_fsm_state6 = 55'd32;
parameter    ap_ST_fsm_state7 = 55'd64;
parameter    ap_ST_fsm_state8 = 55'd128;
parameter    ap_ST_fsm_state9 = 55'd256;
parameter    ap_ST_fsm_state10 = 55'd512;
parameter    ap_ST_fsm_state11 = 55'd1024;
parameter    ap_ST_fsm_state12 = 55'd2048;
parameter    ap_ST_fsm_state13 = 55'd4096;
parameter    ap_ST_fsm_state14 = 55'd8192;
parameter    ap_ST_fsm_state15 = 55'd16384;
parameter    ap_ST_fsm_state16 = 55'd32768;
parameter    ap_ST_fsm_state17 = 55'd65536;
parameter    ap_ST_fsm_state18 = 55'd131072;
parameter    ap_ST_fsm_state19 = 55'd262144;
parameter    ap_ST_fsm_state20 = 55'd524288;
parameter    ap_ST_fsm_state21 = 55'd1048576;
parameter    ap_ST_fsm_state22 = 55'd2097152;
parameter    ap_ST_fsm_state23 = 55'd4194304;
parameter    ap_ST_fsm_state24 = 55'd8388608;
parameter    ap_ST_fsm_state25 = 55'd16777216;
parameter    ap_ST_fsm_state26 = 55'd33554432;
parameter    ap_ST_fsm_state27 = 55'd67108864;
parameter    ap_ST_fsm_state28 = 55'd134217728;
parameter    ap_ST_fsm_state29 = 55'd268435456;
parameter    ap_ST_fsm_state30 = 55'd536870912;
parameter    ap_ST_fsm_state31 = 55'd1073741824;
parameter    ap_ST_fsm_state32 = 55'd2147483648;
parameter    ap_ST_fsm_state33 = 55'd4294967296;
parameter    ap_ST_fsm_state34 = 55'd8589934592;
parameter    ap_ST_fsm_state35 = 55'd17179869184;
parameter    ap_ST_fsm_state36 = 55'd34359738368;
parameter    ap_ST_fsm_state37 = 55'd68719476736;
parameter    ap_ST_fsm_state38 = 55'd137438953472;
parameter    ap_ST_fsm_state39 = 55'd274877906944;
parameter    ap_ST_fsm_state40 = 55'd549755813888;
parameter    ap_ST_fsm_state41 = 55'd1099511627776;
parameter    ap_ST_fsm_state42 = 55'd2199023255552;
parameter    ap_ST_fsm_state43 = 55'd4398046511104;
parameter    ap_ST_fsm_state44 = 55'd8796093022208;
parameter    ap_ST_fsm_state45 = 55'd17592186044416;
parameter    ap_ST_fsm_state46 = 55'd35184372088832;
parameter    ap_ST_fsm_state47 = 55'd70368744177664;
parameter    ap_ST_fsm_state48 = 55'd140737488355328;
parameter    ap_ST_fsm_state49 = 55'd281474976710656;
parameter    ap_ST_fsm_state50 = 55'd562949953421312;
parameter    ap_ST_fsm_state51 = 55'd1125899906842624;
parameter    ap_ST_fsm_state52 = 55'd2251799813685248;
parameter    ap_ST_fsm_state53 = 55'd4503599627370496;
parameter    ap_ST_fsm_state54 = 55'd9007199254740992;
parameter    ap_ST_fsm_state55 = 55'd18014398509481984;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] c_0_address0;
output   c_0_ce0;
output   c_0_we0;
output  [7:0] c_0_d0;
output  [2:0] c_1_address0;
output   c_1_ce0;
output   c_1_we0;
output  [7:0] c_1_d0;
output  [2:0] c_2_address0;
output   c_2_ce0;
output   c_2_we0;
output  [7:0] c_2_d0;
output  [2:0] c_3_address0;
output   c_3_ce0;
output   c_3_we0;
output  [7:0] c_3_d0;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
input  [7:0] p_read16;
input  [7:0] p_read17;
input  [7:0] p_read18;
input  [7:0] p_read19;
input  [7:0] p_read20;
input  [7:0] p_read21;
input  [7:0] p_read22;
input  [7:0] p_read23;
input  [7:0] p_read24;
input  [7:0] p_read25;
input  [7:0] p_read26;
input  [7:0] p_read27;
input  [7:0] p_read28;
input  [7:0] p_read29;
input  [7:0] p_read30;
input  [7:0] p_read31;
input  [7:0] p_read32;
input  [7:0] p_read33;
input  [7:0] p_read34;
input  [7:0] p_read35;
input  [7:0] p_read36;
input  [7:0] p_read37;
input  [7:0] p_read38;
input  [7:0] p_read39;
input  [7:0] p_read40;
input  [7:0] p_read41;
input  [7:0] p_read42;
input  [7:0] p_read43;
input  [7:0] p_read44;
input  [7:0] p_read45;
input  [7:0] p_read46;
input  [7:0] p_read47;
input  [7:0] p_read48;
input  [7:0] p_read49;
input  [7:0] p_read50;
input  [7:0] p_read51;
input  [7:0] p_read52;
input  [7:0] p_read53;
input  [7:0] p_read54;
input  [7:0] p_read55;
input  [7:0] p_read56;
input  [7:0] p_read57;
input  [7:0] p_read58;
input  [7:0] p_read59;
input  [7:0] p_read60;
input  [7:0] p_read61;
input  [7:0] p_read62;
input  [7:0] p_read63;
input  [7:0] p_read64;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] c_0_address0;
reg c_0_ce0;
reg c_0_we0;
reg[7:0] c_0_d0;
reg[2:0] c_1_address0;
reg c_1_ce0;
reg c_1_we0;
reg[7:0] c_1_d0;
reg[2:0] c_2_address0;
reg c_2_ce0;
reg c_2_we0;
reg[7:0] c_2_d0;
reg[2:0] c_3_address0;
reg c_3_ce0;
reg c_3_we0;
reg[7:0] c_3_d0;

(* fsm_encoding = "none" *) reg   [54:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_936;
wire    ap_CS_fsm_state2;
wire    grp_LOADBYTES_fu_650_ap_done;
wire    grp_LOADBYTES_fu_690_ap_done;
wire    grp_LOADBYTES_fu_730_ap_done;
wire    grp_LOADBYTES_fu_770_ap_done;
reg    ap_block_state2_on_subcall_done;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state33;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
reg   [63:0] reg_941;
reg   [63:0] reg_946;
reg   [63:0] reg_951;
reg   [63:0] reg_956;
wire   [63:0] grp_LOADBYTES_fu_650_ap_return;
reg   [63:0] reg_961;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state39;
reg   [63:0] K0_reg_1519;
wire   [63:0] grp_LOADBYTES_fu_690_ap_return;
reg   [63:0] K1_reg_1526;
wire   [63:0] s_3_14_fu_983_p2;
reg   [63:0] s_3_14_reg_1533;
wire    ap_CS_fsm_state13;
wire   [63:0] s_4_13_fu_988_p2;
reg   [63:0] s_4_13_reg_1538;
wire    ap_CS_fsm_state14;
wire   [3:0] trunc_ln40_fu_1038_p1;
reg   [3:0] trunc_ln40_reg_1706;
wire    ap_CS_fsm_state15;
wire   [63:0] s_4_26_fu_1119_p2;
reg   [63:0] s_4_26_reg_1760;
wire    ap_CS_fsm_state29;
wire   [3:0] trunc_ln58_fu_1160_p1;
reg   [3:0] trunc_ln58_reg_1765;
wire    ap_CS_fsm_state31;
wire   [63:0] s_0_64_fu_1203_p2;
reg   [63:0] s_0_64_reg_1774;
wire    ap_CS_fsm_state32;
wire   [63:0] s_3_63_fu_1268_p2;
reg   [63:0] s_3_63_reg_1780;
wire    ap_CS_fsm_state51;
wire   [63:0] xor_ln80_fu_1273_p2;
reg   [63:0] xor_ln80_reg_1785;
wire    grp_LOADBYTES_fu_650_ap_start;
wire    grp_LOADBYTES_fu_650_ap_idle;
wire    grp_LOADBYTES_fu_650_ap_ready;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_47;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_48;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_49;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_50;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_51;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_52;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_53;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_54;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_55;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_56;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_57;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_58;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_59;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_60;
reg   [7:0] grp_LOADBYTES_fu_650_bytes_read_61;
reg   [3:0] grp_LOADBYTES_fu_650_n;
reg   [3:0] grp_LOADBYTES_fu_650_idx;
wire    grp_LOADBYTES_fu_690_ap_start;
wire    grp_LOADBYTES_fu_690_ap_idle;
wire    grp_LOADBYTES_fu_690_ap_ready;
wire    grp_LOADBYTES_fu_730_ap_start;
wire    grp_LOADBYTES_fu_730_ap_idle;
wire    grp_LOADBYTES_fu_730_ap_ready;
wire   [63:0] grp_LOADBYTES_fu_730_ap_return;
wire    grp_LOADBYTES_fu_770_ap_start;
wire    grp_LOADBYTES_fu_770_ap_idle;
wire    grp_LOADBYTES_fu_770_ap_ready;
wire   [63:0] grp_LOADBYTES_fu_770_ap_return;
wire    grp_ROUND_6_fu_811_ap_ready;
reg   [63:0] grp_ROUND_6_fu_811_s_0_read;
reg   [63:0] grp_ROUND_6_fu_811_s_1_read;
reg   [63:0] grp_ROUND_6_fu_811_s_2_read;
reg   [63:0] grp_ROUND_6_fu_811_s_3_read;
reg   [63:0] grp_ROUND_6_fu_811_s_4_read;
reg   [7:0] grp_ROUND_6_fu_811_C;
wire   [63:0] grp_ROUND_6_fu_811_ap_return_0;
wire   [63:0] grp_ROUND_6_fu_811_ap_return_1;
wire   [63:0] grp_ROUND_6_fu_811_ap_return_2;
wire   [63:0] grp_ROUND_6_fu_811_ap_return_3;
wire   [63:0] grp_ROUND_6_fu_811_ap_return_4;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_idle;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_ready;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_d0;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_d0;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_d0;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_d0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_done;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_idle;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_ready;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_d0;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_d0;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_d0;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_d0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_idle;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_ready;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_d0;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_d0;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_d0;
wire   [2:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_d0;
reg    grp_LOADBYTES_fu_650_ap_start_reg;
wire   [0:0] icmp_ln40_fu_1029_p2;
wire   [0:0] icmp_ln58_fu_1175_p2;
reg    grp_LOADBYTES_fu_690_ap_start_reg;
reg    grp_LOADBYTES_fu_730_ap_start_reg;
reg    grp_LOADBYTES_fu_770_ap_start_reg;
wire   [63:0] s_0_45_fu_1070_p2;
wire    ap_CS_fsm_state22;
wire   [63:0] s_0_19_fu_1108_p2;
wire    ap_CS_fsm_state38;
wire   [63:0] s_0_52_fu_1241_p2;
wire   [63:0] s_1_49_fu_1248_p2;
wire   [63:0] s_2_49_fu_1254_p2;
reg    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg;
reg    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
reg    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
reg   [4:0] idx_fu_210;
wire   [4:0] add_ln40_fu_1049_p2;
reg   [4:0] adlen_assign_fu_214;
wire   [4:0] add_ln45_fu_1043_p2;
reg   [63:0] s_0_0_fu_218;
reg   [63:0] s_1_0_fu_222;
reg   [63:0] s_2_0_fu_226;
reg   [63:0] s_3_0_fu_230;
reg   [63:0] s_4_0_fu_234;
reg   [4:0] idx53_fu_238;
wire   [4:0] add_ln58_fu_1187_p2;
reg   [4:0] mlen_assign_fu_242;
wire   [4:0] add_ln65_fu_1181_p2;
wire    ap_CS_fsm_state30;
reg   [63:0] s_0_1_26_fu_246;
reg   [63:0] s_1_1_27_fu_250;
reg   [63:0] s_2_1_28_fu_254;
reg   [63:0] s_3_1_29_fu_258;
reg   [63:0] s_4_1_30_fu_262;
wire   [1:0] tmp_4_fu_1019_p4;
wire   [63:0] xor_ln49_fu_1102_p2;
wire   [1:0] tmp_5_fu_1165_p4;
wire   [63:0] xor_ln70_fu_1235_p2;
reg   [54:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
reg    ap_ST_fsm_state32_blk;
reg    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
reg    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
reg    ap_ST_fsm_state55_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 55'd1;
#0 grp_LOADBYTES_fu_650_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_fu_690_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_fu_730_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_fu_770_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg = 1'b0;
#0 idx_fu_210 = 5'd0;
#0 adlen_assign_fu_214 = 5'd0;
#0 s_0_0_fu_218 = 64'd0;
#0 s_1_0_fu_222 = 64'd0;
#0 s_2_0_fu_226 = 64'd0;
#0 s_3_0_fu_230 = 64'd0;
#0 s_4_0_fu_234 = 64'd0;
#0 idx53_fu_238 = 5'd0;
#0 mlen_assign_fu_242 = 5'd0;
#0 s_0_1_26_fu_246 = 64'd0;
#0 s_1_1_27_fu_250 = 64'd0;
#0 s_2_1_28_fu_254 = 64'd0;
#0 s_3_1_29_fu_258 = 64'd0;
#0 s_4_1_30_fu_262 = 64'd0;
end

axi_encrypt_LOADBYTES grp_LOADBYTES_fu_650(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_fu_650_ap_start),
    .ap_done(grp_LOADBYTES_fu_650_ap_done),
    .ap_idle(grp_LOADBYTES_fu_650_ap_idle),
    .ap_ready(grp_LOADBYTES_fu_650_ap_ready),
    .bytes_read(grp_LOADBYTES_fu_650_bytes_read),
    .bytes_read_47(grp_LOADBYTES_fu_650_bytes_read_47),
    .bytes_read_48(grp_LOADBYTES_fu_650_bytes_read_48),
    .bytes_read_49(grp_LOADBYTES_fu_650_bytes_read_49),
    .bytes_read_50(grp_LOADBYTES_fu_650_bytes_read_50),
    .bytes_read_51(grp_LOADBYTES_fu_650_bytes_read_51),
    .bytes_read_52(grp_LOADBYTES_fu_650_bytes_read_52),
    .bytes_read_53(grp_LOADBYTES_fu_650_bytes_read_53),
    .bytes_read_54(grp_LOADBYTES_fu_650_bytes_read_54),
    .bytes_read_55(grp_LOADBYTES_fu_650_bytes_read_55),
    .bytes_read_56(grp_LOADBYTES_fu_650_bytes_read_56),
    .bytes_read_57(grp_LOADBYTES_fu_650_bytes_read_57),
    .bytes_read_58(grp_LOADBYTES_fu_650_bytes_read_58),
    .bytes_read_59(grp_LOADBYTES_fu_650_bytes_read_59),
    .bytes_read_60(grp_LOADBYTES_fu_650_bytes_read_60),
    .bytes_read_61(grp_LOADBYTES_fu_650_bytes_read_61),
    .n(grp_LOADBYTES_fu_650_n),
    .idx(grp_LOADBYTES_fu_650_idx),
    .ap_return(grp_LOADBYTES_fu_650_ap_return)
);

axi_encrypt_LOADBYTES grp_LOADBYTES_fu_690(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_fu_690_ap_start),
    .ap_done(grp_LOADBYTES_fu_690_ap_done),
    .ap_idle(grp_LOADBYTES_fu_690_ap_idle),
    .ap_ready(grp_LOADBYTES_fu_690_ap_ready),
    .bytes_read(p_read49),
    .bytes_read_47(p_read50),
    .bytes_read_48(p_read51),
    .bytes_read_49(p_read52),
    .bytes_read_50(p_read53),
    .bytes_read_51(p_read54),
    .bytes_read_52(p_read55),
    .bytes_read_53(p_read56),
    .bytes_read_54(p_read57),
    .bytes_read_55(p_read58),
    .bytes_read_56(p_read59),
    .bytes_read_57(p_read60),
    .bytes_read_58(p_read61),
    .bytes_read_59(p_read62),
    .bytes_read_60(p_read63),
    .bytes_read_61(p_read64),
    .n(4'd8),
    .idx(4'd8),
    .ap_return(grp_LOADBYTES_fu_690_ap_return)
);

axi_encrypt_LOADBYTES grp_LOADBYTES_fu_730(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_fu_730_ap_start),
    .ap_done(grp_LOADBYTES_fu_730_ap_done),
    .ap_idle(grp_LOADBYTES_fu_730_ap_idle),
    .ap_ready(grp_LOADBYTES_fu_730_ap_ready),
    .bytes_read(p_read33),
    .bytes_read_47(p_read34),
    .bytes_read_48(p_read35),
    .bytes_read_49(p_read36),
    .bytes_read_50(p_read37),
    .bytes_read_51(p_read38),
    .bytes_read_52(p_read39),
    .bytes_read_53(p_read40),
    .bytes_read_54(p_read41),
    .bytes_read_55(p_read42),
    .bytes_read_56(p_read43),
    .bytes_read_57(p_read44),
    .bytes_read_58(p_read45),
    .bytes_read_59(p_read46),
    .bytes_read_60(p_read47),
    .bytes_read_61(p_read48),
    .n(4'd8),
    .idx(4'd0),
    .ap_return(grp_LOADBYTES_fu_730_ap_return)
);

axi_encrypt_LOADBYTES grp_LOADBYTES_fu_770(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_fu_770_ap_start),
    .ap_done(grp_LOADBYTES_fu_770_ap_done),
    .ap_idle(grp_LOADBYTES_fu_770_ap_idle),
    .ap_ready(grp_LOADBYTES_fu_770_ap_ready),
    .bytes_read(p_read33),
    .bytes_read_47(p_read34),
    .bytes_read_48(p_read35),
    .bytes_read_49(p_read36),
    .bytes_read_50(p_read37),
    .bytes_read_51(p_read38),
    .bytes_read_52(p_read39),
    .bytes_read_53(p_read40),
    .bytes_read_54(p_read41),
    .bytes_read_55(p_read42),
    .bytes_read_56(p_read43),
    .bytes_read_57(p_read44),
    .bytes_read_58(p_read45),
    .bytes_read_59(p_read46),
    .bytes_read_60(p_read47),
    .bytes_read_61(p_read48),
    .n(4'd8),
    .idx(4'd8),
    .ap_return(grp_LOADBYTES_fu_770_ap_return)
);

axi_encrypt_ROUND_6 grp_ROUND_6_fu_811(
    .ap_ready(grp_ROUND_6_fu_811_ap_ready),
    .s_0_read(grp_ROUND_6_fu_811_s_0_read),
    .s_1_read(grp_ROUND_6_fu_811_s_1_read),
    .s_2_read(grp_ROUND_6_fu_811_s_2_read),
    .s_3_read(grp_ROUND_6_fu_811_s_3_read),
    .s_4_read(grp_ROUND_6_fu_811_s_4_read),
    .C(grp_ROUND_6_fu_811_C),
    .ap_return_0(grp_ROUND_6_fu_811_ap_return_0),
    .ap_return_1(grp_ROUND_6_fu_811_ap_return_1),
    .ap_return_2(grp_ROUND_6_fu_811_ap_return_2),
    .ap_return_3(grp_ROUND_6_fu_811_ap_return_3),
    .ap_return_4(grp_ROUND_6_fu_811_ap_return_4)
);

axi_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start),
    .ap_done(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_ready),
    .c_3_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_address0),
    .c_3_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_ce0),
    .c_3_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_we0),
    .c_3_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_d0),
    .c_2_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_address0),
    .c_2_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_ce0),
    .c_2_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_we0),
    .c_2_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_d0),
    .c_1_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_address0),
    .c_1_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_ce0),
    .c_1_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_we0),
    .c_1_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_d0),
    .c_0_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_address0),
    .c_0_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_ce0),
    .c_0_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_we0),
    .c_0_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_d0),
    .s_0_26(s_0_64_reg_1774),
    .idx53(trunc_ln58_reg_1765)
);

axi_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start),
    .ap_done(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_ready),
    .c_3_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_address0),
    .c_3_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_ce0),
    .c_3_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_we0),
    .c_3_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_d0),
    .c_2_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_address0),
    .c_2_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_ce0),
    .c_2_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_we0),
    .c_2_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_d0),
    .c_1_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_address0),
    .c_1_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_ce0),
    .c_1_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_we0),
    .c_1_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_d0),
    .c_0_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_address0),
    .c_0_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_ce0),
    .c_0_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_we0),
    .c_0_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_d0),
    .s_3_39(s_3_63_reg_1780)
);

axi_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start),
    .ap_done(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_ready),
    .c_3_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_address0),
    .c_3_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_ce0),
    .c_3_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_we0),
    .c_3_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_d0),
    .c_2_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_address0),
    .c_2_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_ce0),
    .c_2_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_we0),
    .c_2_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_d0),
    .c_1_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_address0),
    .c_1_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_ce0),
    .c_1_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_we0),
    .c_1_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_d0),
    .c_0_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_address0),
    .c_0_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_ce0),
    .c_0_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_we0),
    .c_0_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_d0),
    .xor_ln80(xor_ln80_reg_1785)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_fu_650_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln58_fu_1175_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln58_fu_1175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln40_fu_1029_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln40_fu_1029_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_LOADBYTES_fu_650_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_fu_650_ap_ready == 1'b1)) begin
            grp_LOADBYTES_fu_650_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_fu_690_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_LOADBYTES_fu_690_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_fu_690_ap_ready == 1'b1)) begin
            grp_LOADBYTES_fu_690_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_fu_730_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_LOADBYTES_fu_730_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_fu_730_ap_ready == 1'b1)) begin
            grp_LOADBYTES_fu_730_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_fu_770_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_LOADBYTES_fu_770_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_fu_770_ap_ready == 1'b1)) begin
            grp_LOADBYTES_fu_770_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state52)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state54)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state32) & (grp_LOADBYTES_fu_650_ap_done == 1'b1))) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        adlen_assign_fu_214 <= 5'd16;
    end else if (((icmp_ln40_fu_1029_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        adlen_assign_fu_214 <= add_ln45_fu_1043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_1029_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        idx53_fu_238 <= 5'd0;
    end else if (((icmp_ln58_fu_1175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        idx53_fu_238 <= add_ln58_fu_1187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        idx_fu_210 <= 5'd0;
    end else if (((icmp_ln40_fu_1029_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        idx_fu_210 <= add_ln40_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        mlen_assign_fu_242 <= 5'd16;
    end else if (((icmp_ln58_fu_1175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        mlen_assign_fu_242 <= add_ln65_fu_1181_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s_3_0_fu_230 <= s_3_14_reg_1533;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        s_3_0_fu_230 <= grp_ROUND_6_fu_811_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s_4_0_fu_234 <= s_4_13_reg_1538;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        s_4_0_fu_234 <= grp_ROUND_6_fu_811_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        s_4_1_30_fu_262 <= s_4_26_reg_1760;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        s_4_1_30_fu_262 <= grp_ROUND_6_fu_811_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        K0_reg_1519 <= grp_LOADBYTES_fu_650_ap_return;
        K1_reg_1526 <= grp_LOADBYTES_fu_690_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) 
    | ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done)))) begin
        reg_936 <= grp_ROUND_6_fu_811_ap_return_0;
        reg_941 <= grp_ROUND_6_fu_811_ap_return_1;
        reg_946 <= grp_ROUND_6_fu_811_ap_return_2;
        reg_951 <= grp_ROUND_6_fu_811_ap_return_3;
        reg_956 <= grp_ROUND_6_fu_811_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_961 <= grp_LOADBYTES_fu_650_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13))) begin
        s_0_0_fu_218 <= grp_ROUND_6_fu_811_ap_return_0;
        s_1_0_fu_222 <= grp_ROUND_6_fu_811_ap_return_1;
        s_2_0_fu_226 <= grp_ROUND_6_fu_811_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state29))) begin
        s_0_1_26_fu_246 <= grp_ROUND_6_fu_811_ap_return_0;
        s_1_1_27_fu_250 <= grp_ROUND_6_fu_811_ap_return_1;
        s_2_1_28_fu_254 <= grp_ROUND_6_fu_811_ap_return_2;
        s_3_1_29_fu_258 <= grp_ROUND_6_fu_811_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        s_0_64_reg_1774 <= s_0_64_fu_1203_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        s_3_14_reg_1533 <= s_3_14_fu_983_p2;
        s_4_13_reg_1538 <= s_4_13_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        s_3_63_reg_1780 <= s_3_63_fu_1268_p2;
        xor_ln80_reg_1785 <= xor_ln80_fu_1273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        s_4_26_reg_1760 <= s_4_26_fu_1119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln40_reg_1706 <= trunc_ln40_fu_1038_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        trunc_ln58_reg_1765 <= trunc_ln58_fu_1160_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_fu_650_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_fu_650_ap_done == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_fu_650_ap_done == 1'b0)) begin
        ap_ST_fsm_state32_blk = 1'b1;
    end else begin
        ap_ST_fsm_state32_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done == 1'b0)) begin
        ap_ST_fsm_state33_blk = 1'b1;
    end else begin
        ap_ST_fsm_state33_blk = 1'b0;
    end
end

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_fu_650_ap_done == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_done == 1'b0)) begin
        ap_ST_fsm_state53_blk = 1'b1;
    end else begin
        ap_ST_fsm_state53_blk = 1'b0;
    end
end

assign ap_ST_fsm_state54_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done == 1'b0)) begin
        ap_ST_fsm_state55_blk = 1'b1;
    end else begin
        ap_ST_fsm_state55_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_0_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_0_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_0_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_address0;
    end else begin
        c_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_0_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_0_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_0_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_ce0;
    end else begin
        c_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_0_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_d0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_0_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_0_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_d0;
    end else begin
        c_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_0_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_we0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_0_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_0_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_we0;
    end else begin
        c_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_1_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_1_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_1_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_address0;
    end else begin
        c_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_1_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_1_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_1_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_ce0;
    end else begin
        c_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_1_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_d0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_1_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_1_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_d0;
    end else begin
        c_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_1_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_we0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_1_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_1_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_we0;
    end else begin
        c_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_2_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_2_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_2_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_address0;
    end else begin
        c_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_2_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_2_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_2_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_ce0;
    end else begin
        c_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_2_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_d0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_2_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_2_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_d0;
    end else begin
        c_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_2_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_we0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_2_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_2_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_we0;
    end else begin
        c_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_3_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_3_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_3_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_address0;
    end else begin
        c_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_3_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_3_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_3_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_ce0;
    end else begin
        c_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_3_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_d0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_3_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_3_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_d0;
    end else begin
        c_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c_3_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_we0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_3_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_3_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_we0;
    end else begin
        c_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read = p_read1;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read = p_read17;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read = p_read49;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_47 = p_read2;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_47 = p_read18;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_47 = p_read50;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_47 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_48 = p_read3;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_48 = p_read19;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_48 = p_read51;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_48 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_49 = p_read4;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_49 = p_read20;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_49 = p_read52;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_49 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_50 = p_read5;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_50 = p_read21;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_50 = p_read53;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_50 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_51 = p_read6;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_51 = p_read22;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_51 = p_read54;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_51 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_52 = p_read7;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_52 = p_read23;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_52 = p_read55;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_52 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_53 = p_read8;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_53 = p_read24;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_53 = p_read56;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_53 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_54 = p_read9;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_54 = p_read25;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_54 = p_read57;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_54 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_55 = p_read10;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_55 = p_read26;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_55 = p_read58;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_55 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_56 = p_read11;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_56 = p_read27;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_56 = p_read59;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_56 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_57 = p_read12;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_57 = p_read28;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_57 = p_read60;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_57 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_58 = p_read13;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_58 = p_read29;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_58 = p_read61;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_58 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_59 = p_read14;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_59 = p_read30;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_59 = p_read62;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_59 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_60 = p_read15;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_60 = p_read31;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_60 = p_read63;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_60 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_LOADBYTES_fu_650_bytes_read_61 = p_read16;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_LOADBYTES_fu_650_bytes_read_61 = p_read32;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_650_bytes_read_61 = p_read64;
    end else begin
        grp_LOADBYTES_fu_650_bytes_read_61 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_LOADBYTES_fu_650_idx = trunc_ln58_reg_1765;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_LOADBYTES_fu_650_idx = trunc_ln40_reg_1706;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_LOADBYTES_fu_650_idx = 4'd0;
    end else begin
        grp_LOADBYTES_fu_650_idx = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_LOADBYTES_fu_650_n = 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_LOADBYTES_fu_650_n = 4'd8;
    end else begin
        grp_LOADBYTES_fu_650_n = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_ROUND_6_fu_811_C = 8'd75;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_ROUND_6_fu_811_C = 8'd90;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_ROUND_6_fu_811_C = 8'd105;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_6_fu_811_C = 8'd120;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_6_fu_811_C = 8'd135;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_ROUND_6_fu_811_C = 8'd150;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_ROUND_6_fu_811_C = 8'd165;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_6_fu_811_C = 8'd180;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_6_fu_811_C = 8'd195;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_ROUND_6_fu_811_C = 8'd210;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_ROUND_6_fu_811_C = 8'd225;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_ROUND_6_fu_811_C = 8'd240;
    end else begin
        grp_ROUND_6_fu_811_C = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_ROUND_6_fu_811_s_0_read = s_0_52_fu_1241_p2;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_ROUND_6_fu_811_s_0_read = s_0_64_reg_1774;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_ROUND_6_fu_811_s_0_read = s_0_19_fu_1108_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_6_fu_811_s_0_read = s_0_45_fu_1070_p2;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == 
    ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_ROUND_6_fu_811_s_0_read = reg_936;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROUND_6_fu_811_s_0_read = 64'd9241399655273594880;
    end else begin
        grp_ROUND_6_fu_811_s_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_ROUND_6_fu_811_s_1_read = s_1_49_fu_1248_p2;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_ROUND_6_fu_811_s_1_read = s_1_1_27_fu_250;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_6_fu_811_s_1_read = s_1_0_fu_222;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == 
    ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_ROUND_6_fu_811_s_1_read = reg_941;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROUND_6_fu_811_s_1_read = grp_LOADBYTES_fu_650_ap_return;
    end else begin
        grp_ROUND_6_fu_811_s_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_ROUND_6_fu_811_s_2_read = s_2_49_fu_1254_p2;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_ROUND_6_fu_811_s_2_read = s_2_1_28_fu_254;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_6_fu_811_s_2_read = s_2_0_fu_226;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == 
    ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_ROUND_6_fu_811_s_2_read = reg_946;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROUND_6_fu_811_s_2_read = grp_LOADBYTES_fu_690_ap_return;
    end else begin
        grp_ROUND_6_fu_811_s_2_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_ROUND_6_fu_811_s_3_read = s_3_1_29_fu_258;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_6_fu_811_s_3_read = s_3_0_fu_230;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == 
    ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_ROUND_6_fu_811_s_3_read = reg_951;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROUND_6_fu_811_s_3_read = grp_LOADBYTES_fu_730_ap_return;
    end else begin
        grp_ROUND_6_fu_811_s_3_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_ROUND_6_fu_811_s_4_read = s_4_1_30_fu_262;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_6_fu_811_s_4_read = s_4_0_fu_234;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == 
    ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_ROUND_6_fu_811_s_4_read = reg_956;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROUND_6_fu_811_s_4_read = grp_LOADBYTES_fu_770_ap_return;
    end else begin
        grp_ROUND_6_fu_811_s_4_read = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln40_fu_1029_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (grp_LOADBYTES_fu_650_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (grp_LOADBYTES_fu_650_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln58_fu_1175_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (grp_LOADBYTES_fu_650_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (grp_LOADBYTES_fu_650_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln40_fu_1049_p2 = (idx_fu_210 + 5'd8);

assign add_ln45_fu_1043_p2 = ($signed(adlen_assign_fu_214) + $signed(5'd24));

assign add_ln58_fu_1187_p2 = (idx53_fu_238 + 5'd8);

assign add_ln65_fu_1181_p2 = ($signed(mlen_assign_fu_242) + $signed(5'd24));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_LOADBYTES_fu_770_ap_done == 1'b0) | (grp_LOADBYTES_fu_730_ap_done == 1'b0) | (grp_LOADBYTES_fu_690_ap_done == 1'b0) | (grp_LOADBYTES_fu_650_ap_done == 1'b0));
end

assign grp_LOADBYTES_fu_650_ap_start = grp_LOADBYTES_fu_650_ap_start_reg;

assign grp_LOADBYTES_fu_690_ap_start = grp_LOADBYTES_fu_690_ap_start_reg;

assign grp_LOADBYTES_fu_730_ap_start = grp_LOADBYTES_fu_730_ap_start_reg;

assign grp_LOADBYTES_fu_770_ap_start = grp_LOADBYTES_fu_770_ap_start_reg;

assign grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg;

assign grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg;

assign grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg;

assign icmp_ln40_fu_1029_p2 = ((tmp_4_fu_1019_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1175_p2 = ((tmp_5_fu_1165_p4 == 2'd0) ? 1'b1 : 1'b0);

assign s_0_19_fu_1108_p2 = (xor_ln49_fu_1102_p2 ^ 64'd9223372036854775808);

assign s_0_45_fu_1070_p2 = (s_0_0_fu_218 ^ reg_961);

assign s_0_52_fu_1241_p2 = (xor_ln70_fu_1235_p2 ^ 64'd9223372036854775808);

assign s_0_64_fu_1203_p2 = (s_0_1_26_fu_246 ^ grp_LOADBYTES_fu_650_ap_return);

assign s_1_49_fu_1248_p2 = (s_1_1_27_fu_250 ^ K0_reg_1519);

assign s_2_49_fu_1254_p2 = (s_2_1_28_fu_254 ^ K1_reg_1526);

assign s_3_14_fu_983_p2 = (grp_ROUND_6_fu_811_ap_return_3 ^ K0_reg_1519);

assign s_3_63_fu_1268_p2 = (grp_ROUND_6_fu_811_ap_return_3 ^ K0_reg_1519);

assign s_4_13_fu_988_p2 = (grp_ROUND_6_fu_811_ap_return_4 ^ K1_reg_1526);

assign s_4_26_fu_1119_p2 = (grp_ROUND_6_fu_811_ap_return_4 ^ 64'd1);

assign tmp_4_fu_1019_p4 = {{adlen_assign_fu_214[4:3]}};

assign tmp_5_fu_1165_p4 = {{mlen_assign_fu_242[4:3]}};

assign trunc_ln40_fu_1038_p1 = idx_fu_210[3:0];

assign trunc_ln58_fu_1160_p1 = idx53_fu_238[3:0];

assign xor_ln49_fu_1102_p2 = (s_0_0_fu_218 ^ reg_961);

assign xor_ln70_fu_1235_p2 = (s_0_1_26_fu_246 ^ reg_961);

assign xor_ln80_fu_1273_p2 = (grp_ROUND_6_fu_811_ap_return_4 ^ K1_reg_1526);

endmodule //axi_encrypt_crypto_aead_encrypt
