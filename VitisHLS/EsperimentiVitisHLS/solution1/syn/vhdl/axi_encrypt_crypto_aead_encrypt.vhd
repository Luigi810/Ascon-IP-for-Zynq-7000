-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity axi_encrypt_crypto_aead_encrypt is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    c_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    c_0_ce0 : OUT STD_LOGIC;
    c_0_we0 : OUT STD_LOGIC;
    c_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    c_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    c_1_ce0 : OUT STD_LOGIC;
    c_1_we0 : OUT STD_LOGIC;
    c_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    c_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    c_2_ce0 : OUT STD_LOGIC;
    c_2_we0 : OUT STD_LOGIC;
    c_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    c_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    c_3_ce0 : OUT STD_LOGIC;
    c_3_we0 : OUT STD_LOGIC;
    c_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read16 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read19 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read20 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read21 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read22 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read23 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read24 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read25 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read26 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read27 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read28 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read29 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read30 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read31 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read32 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read33 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read34 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read35 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read36 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read37 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read38 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read39 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read40 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read41 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read42 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read43 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read44 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read45 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read46 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read47 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read48 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read49 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read50 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read51 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read52 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read53 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read54 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read55 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read56 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read57 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read58 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read59 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read60 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read61 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read62 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read63 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read64 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of axi_encrypt_crypto_aead_encrypt is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (54 downto 0) := "0000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (54 downto 0) := "0000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (54 downto 0) := "0000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (54 downto 0) := "0000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (54 downto 0) := "0000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (54 downto 0) := "0000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (54 downto 0) := "0001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (54 downto 0) := "0010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (54 downto 0) := "0100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (54 downto 0) := "1000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_80400C0600000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000001000000000011000000011000000000000000000000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv8_E1 : STD_LOGIC_VECTOR (7 downto 0) := "11100001";
    constant ap_const_lv8_D2 : STD_LOGIC_VECTOR (7 downto 0) := "11010010";
    constant ap_const_lv8_C3 : STD_LOGIC_VECTOR (7 downto 0) := "11000011";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv8_A5 : STD_LOGIC_VECTOR (7 downto 0) := "10100101";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv8_69 : STD_LOGIC_VECTOR (7 downto 0) := "01101001";
    constant ap_const_lv8_5A : STD_LOGIC_VECTOR (7 downto 0) := "01011010";
    constant ap_const_lv8_4B : STD_LOGIC_VECTOR (7 downto 0) := "01001011";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_936 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_LOADBYTES_fu_650_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_fu_690_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_fu_730_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_fu_770_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal reg_941 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_946 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_951 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_956 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_fu_650_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_961 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal K0_reg_1519 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_fu_690_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal K1_reg_1526 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_14_fu_983_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_14_reg_1533 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal s_4_13_fu_988_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_13_reg_1538 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal trunc_ln40_fu_1038_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln40_reg_1706 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal s_4_26_fu_1119_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_26_reg_1760 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal trunc_ln58_fu_1160_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln58_reg_1765 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal s_0_64_fu_1203_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_64_reg_1774 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal s_3_63_fu_1268_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_63_reg_1780 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal xor_ln80_fu_1273_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln80_reg_1785 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_fu_650_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_fu_650_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_fu_650_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_fu_650_bytes_read : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_47 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_48 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_49 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_50 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_51 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_52 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_53 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_54 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_55 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_56 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_57 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_58 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_59 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_60 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_bytes_read_61 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_n : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_fu_650_idx : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_fu_690_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_fu_690_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_fu_690_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_fu_730_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_fu_730_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_fu_730_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_fu_730_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_fu_770_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_fu_770_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_fu_770_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_fu_770_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_6_fu_811_ap_ready : STD_LOGIC;
    signal grp_ROUND_6_fu_811_s_0_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_6_fu_811_s_1_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_6_fu_811_s_2_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_6_fu_811_s_3_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_6_fu_811_s_4_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_6_fu_811_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_6_fu_811_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_6_fu_811_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_6_fu_811_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_6_fu_811_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_6_fu_811_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_fu_650_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln40_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_LOADBYTES_fu_690_ap_start_reg : STD_LOGIC := '0';
    signal grp_LOADBYTES_fu_730_ap_start_reg : STD_LOGIC := '0';
    signal grp_LOADBYTES_fu_770_ap_start_reg : STD_LOGIC := '0';
    signal s_0_45_fu_1070_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal s_0_19_fu_1108_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal s_0_52_fu_1241_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_49_fu_1248_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_49_fu_1254_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal idx_fu_210 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln40_fu_1049_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal adlen_assign_fu_214 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln45_fu_1043_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal s_0_0_fu_218 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_1_0_fu_222 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_2_0_fu_226 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_3_0_fu_230 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_4_0_fu_234 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal idx53_fu_238 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln58_fu_1187_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mlen_assign_fu_242 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln65_fu_1181_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal s_0_1_26_fu_246 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_1_1_27_fu_250 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_2_1_28_fu_254 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_3_1_29_fu_258 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_4_1_30_fu_262 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal tmp_4_fu_1019_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln49_fu_1102_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1165_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln70_fu_1235_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (54 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component axi_encrypt_LOADBYTES IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bytes_read : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_47 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_48 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_49 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_50 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_51 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_52 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_53 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_54 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_55 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_56 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_57 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_58 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_59 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_60 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_read_61 : IN STD_LOGIC_VECTOR (7 downto 0);
        n : IN STD_LOGIC_VECTOR (3 downto 0);
        idx : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component axi_encrypt_ROUND_6 IS
    port (
        ap_ready : OUT STD_LOGIC;
        s_0_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_1_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_2_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_3_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_4_read : IN STD_LOGIC_VECTOR (63 downto 0);
        C : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component axi_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_3_ce0 : OUT STD_LOGIC;
        c_3_we0 : OUT STD_LOGIC;
        c_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        c_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_2_ce0 : OUT STD_LOGIC;
        c_2_we0 : OUT STD_LOGIC;
        c_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        c_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_1_ce0 : OUT STD_LOGIC;
        c_1_we0 : OUT STD_LOGIC;
        c_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        c_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_0_ce0 : OUT STD_LOGIC;
        c_0_we0 : OUT STD_LOGIC;
        c_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_0_26 : IN STD_LOGIC_VECTOR (63 downto 0);
        idx53 : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component axi_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_3_ce0 : OUT STD_LOGIC;
        c_3_we0 : OUT STD_LOGIC;
        c_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        c_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_2_ce0 : OUT STD_LOGIC;
        c_2_we0 : OUT STD_LOGIC;
        c_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        c_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_1_ce0 : OUT STD_LOGIC;
        c_1_we0 : OUT STD_LOGIC;
        c_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        c_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_0_ce0 : OUT STD_LOGIC;
        c_0_we0 : OUT STD_LOGIC;
        c_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_3_39 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component axi_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_3_ce0 : OUT STD_LOGIC;
        c_3_we0 : OUT STD_LOGIC;
        c_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        c_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_2_ce0 : OUT STD_LOGIC;
        c_2_we0 : OUT STD_LOGIC;
        c_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        c_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_1_ce0 : OUT STD_LOGIC;
        c_1_we0 : OUT STD_LOGIC;
        c_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        c_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_0_ce0 : OUT STD_LOGIC;
        c_0_we0 : OUT STD_LOGIC;
        c_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        xor_ln80 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_LOADBYTES_fu_650 : component axi_encrypt_LOADBYTES
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_fu_650_ap_start,
        ap_done => grp_LOADBYTES_fu_650_ap_done,
        ap_idle => grp_LOADBYTES_fu_650_ap_idle,
        ap_ready => grp_LOADBYTES_fu_650_ap_ready,
        bytes_read => grp_LOADBYTES_fu_650_bytes_read,
        bytes_read_47 => grp_LOADBYTES_fu_650_bytes_read_47,
        bytes_read_48 => grp_LOADBYTES_fu_650_bytes_read_48,
        bytes_read_49 => grp_LOADBYTES_fu_650_bytes_read_49,
        bytes_read_50 => grp_LOADBYTES_fu_650_bytes_read_50,
        bytes_read_51 => grp_LOADBYTES_fu_650_bytes_read_51,
        bytes_read_52 => grp_LOADBYTES_fu_650_bytes_read_52,
        bytes_read_53 => grp_LOADBYTES_fu_650_bytes_read_53,
        bytes_read_54 => grp_LOADBYTES_fu_650_bytes_read_54,
        bytes_read_55 => grp_LOADBYTES_fu_650_bytes_read_55,
        bytes_read_56 => grp_LOADBYTES_fu_650_bytes_read_56,
        bytes_read_57 => grp_LOADBYTES_fu_650_bytes_read_57,
        bytes_read_58 => grp_LOADBYTES_fu_650_bytes_read_58,
        bytes_read_59 => grp_LOADBYTES_fu_650_bytes_read_59,
        bytes_read_60 => grp_LOADBYTES_fu_650_bytes_read_60,
        bytes_read_61 => grp_LOADBYTES_fu_650_bytes_read_61,
        n => grp_LOADBYTES_fu_650_n,
        idx => grp_LOADBYTES_fu_650_idx,
        ap_return => grp_LOADBYTES_fu_650_ap_return);

    grp_LOADBYTES_fu_690 : component axi_encrypt_LOADBYTES
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_fu_690_ap_start,
        ap_done => grp_LOADBYTES_fu_690_ap_done,
        ap_idle => grp_LOADBYTES_fu_690_ap_idle,
        ap_ready => grp_LOADBYTES_fu_690_ap_ready,
        bytes_read => p_read49,
        bytes_read_47 => p_read50,
        bytes_read_48 => p_read51,
        bytes_read_49 => p_read52,
        bytes_read_50 => p_read53,
        bytes_read_51 => p_read54,
        bytes_read_52 => p_read55,
        bytes_read_53 => p_read56,
        bytes_read_54 => p_read57,
        bytes_read_55 => p_read58,
        bytes_read_56 => p_read59,
        bytes_read_57 => p_read60,
        bytes_read_58 => p_read61,
        bytes_read_59 => p_read62,
        bytes_read_60 => p_read63,
        bytes_read_61 => p_read64,
        n => ap_const_lv4_8,
        idx => ap_const_lv4_8,
        ap_return => grp_LOADBYTES_fu_690_ap_return);

    grp_LOADBYTES_fu_730 : component axi_encrypt_LOADBYTES
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_fu_730_ap_start,
        ap_done => grp_LOADBYTES_fu_730_ap_done,
        ap_idle => grp_LOADBYTES_fu_730_ap_idle,
        ap_ready => grp_LOADBYTES_fu_730_ap_ready,
        bytes_read => p_read33,
        bytes_read_47 => p_read34,
        bytes_read_48 => p_read35,
        bytes_read_49 => p_read36,
        bytes_read_50 => p_read37,
        bytes_read_51 => p_read38,
        bytes_read_52 => p_read39,
        bytes_read_53 => p_read40,
        bytes_read_54 => p_read41,
        bytes_read_55 => p_read42,
        bytes_read_56 => p_read43,
        bytes_read_57 => p_read44,
        bytes_read_58 => p_read45,
        bytes_read_59 => p_read46,
        bytes_read_60 => p_read47,
        bytes_read_61 => p_read48,
        n => ap_const_lv4_8,
        idx => ap_const_lv4_0,
        ap_return => grp_LOADBYTES_fu_730_ap_return);

    grp_LOADBYTES_fu_770 : component axi_encrypt_LOADBYTES
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_fu_770_ap_start,
        ap_done => grp_LOADBYTES_fu_770_ap_done,
        ap_idle => grp_LOADBYTES_fu_770_ap_idle,
        ap_ready => grp_LOADBYTES_fu_770_ap_ready,
        bytes_read => p_read33,
        bytes_read_47 => p_read34,
        bytes_read_48 => p_read35,
        bytes_read_49 => p_read36,
        bytes_read_50 => p_read37,
        bytes_read_51 => p_read38,
        bytes_read_52 => p_read39,
        bytes_read_53 => p_read40,
        bytes_read_54 => p_read41,
        bytes_read_55 => p_read42,
        bytes_read_56 => p_read43,
        bytes_read_57 => p_read44,
        bytes_read_58 => p_read45,
        bytes_read_59 => p_read46,
        bytes_read_60 => p_read47,
        bytes_read_61 => p_read48,
        n => ap_const_lv4_8,
        idx => ap_const_lv4_8,
        ap_return => grp_LOADBYTES_fu_770_ap_return);

    grp_ROUND_6_fu_811 : component axi_encrypt_ROUND_6
    port map (
        ap_ready => grp_ROUND_6_fu_811_ap_ready,
        s_0_read => grp_ROUND_6_fu_811_s_0_read,
        s_1_read => grp_ROUND_6_fu_811_s_1_read,
        s_2_read => grp_ROUND_6_fu_811_s_2_read,
        s_3_read => grp_ROUND_6_fu_811_s_3_read,
        s_4_read => grp_ROUND_6_fu_811_s_4_read,
        C => grp_ROUND_6_fu_811_C,
        ap_return_0 => grp_ROUND_6_fu_811_ap_return_0,
        ap_return_1 => grp_ROUND_6_fu_811_ap_return_1,
        ap_return_2 => grp_ROUND_6_fu_811_ap_return_2,
        ap_return_3 => grp_ROUND_6_fu_811_ap_return_3,
        ap_return_4 => grp_ROUND_6_fu_811_ap_return_4);

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838 : component axi_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start,
        ap_done => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done,
        ap_idle => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_ready,
        c_3_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_address0,
        c_3_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_ce0,
        c_3_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_we0,
        c_3_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_d0,
        c_2_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_address0,
        c_2_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_ce0,
        c_2_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_we0,
        c_2_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_d0,
        c_1_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_address0,
        c_1_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_ce0,
        c_1_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_we0,
        c_1_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_d0,
        c_0_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_address0,
        c_0_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_ce0,
        c_0_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_we0,
        c_0_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_d0,
        s_0_26 => s_0_64_reg_1774,
        idx53 => trunc_ln58_reg_1765);

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852 : component axi_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start,
        ap_done => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_done,
        ap_idle => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_ready,
        c_3_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_address0,
        c_3_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_ce0,
        c_3_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_we0,
        c_3_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_d0,
        c_2_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_address0,
        c_2_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_ce0,
        c_2_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_we0,
        c_2_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_d0,
        c_1_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_address0,
        c_1_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_ce0,
        c_1_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_we0,
        c_1_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_d0,
        c_0_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_address0,
        c_0_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_ce0,
        c_0_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_we0,
        c_0_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_d0,
        s_3_39 => s_3_63_reg_1780);

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865 : component axi_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start,
        ap_done => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done,
        ap_idle => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_ready,
        c_3_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_address0,
        c_3_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_ce0,
        c_3_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_we0,
        c_3_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_d0,
        c_2_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_address0,
        c_2_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_ce0,
        c_2_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_we0,
        c_2_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_d0,
        c_1_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_address0,
        c_1_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_ce0,
        c_1_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_we0,
        c_1_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_d0,
        c_0_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_address0,
        c_0_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_ce0,
        c_0_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_we0,
        c_0_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_d0,
        xor_ln80 => xor_ln80_reg_1785);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_LOADBYTES_fu_650_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_fu_650_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln58_fu_1175_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((icmp_ln58_fu_1175_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((icmp_ln40_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((icmp_ln40_fu_1029_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_LOADBYTES_fu_650_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_fu_650_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_fu_650_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_fu_690_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_fu_690_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_LOADBYTES_fu_690_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_fu_690_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_fu_690_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_fu_730_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_fu_730_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_LOADBYTES_fu_730_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_fu_730_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_fu_730_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_fu_770_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_fu_770_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_LOADBYTES_fu_770_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_fu_770_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_fu_770_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state32) and (grp_LOADBYTES_fu_650_ap_done = ap_const_logic_1))) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    adlen_assign_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                adlen_assign_fu_214 <= ap_const_lv5_10;
            elsif (((icmp_ln40_fu_1029_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                adlen_assign_fu_214 <= add_ln45_fu_1043_p2;
            end if; 
        end if;
    end process;

    idx53_fu_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                idx53_fu_238 <= ap_const_lv5_0;
            elsif (((icmp_ln58_fu_1175_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                idx53_fu_238 <= add_ln58_fu_1187_p2;
            end if; 
        end if;
    end process;

    idx_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                idx_fu_210 <= ap_const_lv5_0;
            elsif (((icmp_ln40_fu_1029_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                idx_fu_210 <= add_ln40_fu_1049_p2;
            end if; 
        end if;
    end process;

    mlen_assign_fu_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                mlen_assign_fu_242 <= ap_const_lv5_10;
            elsif (((icmp_ln58_fu_1175_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                mlen_assign_fu_242 <= add_ln65_fu_1181_p2;
            end if; 
        end if;
    end process;

    s_3_0_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                s_3_0_fu_230 <= s_3_14_reg_1533;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                s_3_0_fu_230 <= grp_ROUND_6_fu_811_ap_return_3;
            end if; 
        end if;
    end process;

    s_4_0_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                s_4_0_fu_234 <= s_4_13_reg_1538;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                s_4_0_fu_234 <= grp_ROUND_6_fu_811_ap_return_4;
            end if; 
        end if;
    end process;

    s_4_1_30_fu_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                s_4_1_30_fu_262 <= s_4_26_reg_1760;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                s_4_1_30_fu_262 <= grp_ROUND_6_fu_811_ap_return_4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                K0_reg_1519 <= grp_LOADBYTES_fu_650_ap_return;
                K1_reg_1526 <= grp_LOADBYTES_fu_690_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 
    = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done)))) then
                reg_936 <= grp_ROUND_6_fu_811_ap_return_0;
                reg_941 <= grp_ROUND_6_fu_811_ap_return_1;
                reg_946 <= grp_ROUND_6_fu_811_ap_return_2;
                reg_951 <= grp_ROUND_6_fu_811_ap_return_3;
                reg_956 <= grp_ROUND_6_fu_811_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then
                reg_961 <= grp_LOADBYTES_fu_650_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state13))) then
                s_0_0_fu_218 <= grp_ROUND_6_fu_811_ap_return_0;
                s_1_0_fu_222 <= grp_ROUND_6_fu_811_ap_return_1;
                s_2_0_fu_226 <= grp_ROUND_6_fu_811_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state29))) then
                s_0_1_26_fu_246 <= grp_ROUND_6_fu_811_ap_return_0;
                s_1_1_27_fu_250 <= grp_ROUND_6_fu_811_ap_return_1;
                s_2_1_28_fu_254 <= grp_ROUND_6_fu_811_ap_return_2;
                s_3_1_29_fu_258 <= grp_ROUND_6_fu_811_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                s_0_64_reg_1774 <= s_0_64_fu_1203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                s_3_14_reg_1533 <= s_3_14_fu_983_p2;
                s_4_13_reg_1538 <= s_4_13_fu_988_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                s_3_63_reg_1780 <= s_3_63_fu_1268_p2;
                xor_ln80_reg_1785 <= xor_ln80_fu_1273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                s_4_26_reg_1760 <= s_4_26_fu_1119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                trunc_ln40_reg_1706 <= trunc_ln40_fu_1038_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                trunc_ln58_reg_1765 <= trunc_ln58_fu_1160_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_LOADBYTES_fu_650_ap_done, ap_block_state2_on_subcall_done, ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state15, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_done, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done, icmp_ln40_fu_1029_p2, icmp_ln58_fu_1175_p2, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln40_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_LOADBYTES_fu_650_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_LOADBYTES_fu_650_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((icmp_ln58_fu_1175_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state32) and (grp_LOADBYTES_fu_650_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state39 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state39) and (grp_LOADBYTES_fu_650_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln40_fu_1049_p2 <= std_logic_vector(unsigned(idx_fu_210) + unsigned(ap_const_lv5_8));
    add_ln45_fu_1043_p2 <= std_logic_vector(unsigned(adlen_assign_fu_214) + unsigned(ap_const_lv5_18));
    add_ln58_fu_1187_p2 <= std_logic_vector(unsigned(idx53_fu_238) + unsigned(ap_const_lv5_8));
    add_ln65_fu_1181_p2 <= std_logic_vector(unsigned(mlen_assign_fu_242) + unsigned(ap_const_lv5_18));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_LOADBYTES_fu_650_ap_done)
    begin
        if ((grp_LOADBYTES_fu_650_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_LOADBYTES_fu_650_ap_done)
    begin
        if ((grp_LOADBYTES_fu_650_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;

    ap_ST_fsm_state32_blk_assign_proc : process(grp_LOADBYTES_fu_650_ap_done)
    begin
        if ((grp_LOADBYTES_fu_650_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state32_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state32_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state33_blk_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;

    ap_ST_fsm_state39_blk_assign_proc : process(grp_LOADBYTES_fu_650_ap_done)
    begin
        if ((grp_LOADBYTES_fu_650_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state39_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state39_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;

    ap_ST_fsm_state53_blk_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state53_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state53_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state54_blk <= ap_const_logic_0;

    ap_ST_fsm_state55_blk_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state55_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state55_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state2_on_subcall_done_assign_proc : process(grp_LOADBYTES_fu_650_ap_done, grp_LOADBYTES_fu_690_ap_done, grp_LOADBYTES_fu_730_ap_done, grp_LOADBYTES_fu_770_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_LOADBYTES_fu_770_ap_done = ap_const_logic_0) or (grp_LOADBYTES_fu_730_ap_done = ap_const_logic_0) or (grp_LOADBYTES_fu_690_ap_done = ap_const_logic_0) or (grp_LOADBYTES_fu_650_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done, ap_CS_fsm_state55)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done, ap_CS_fsm_state55)
    begin
        if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    c_0_address0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_address0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_0_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_0_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_0_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_address0;
        else 
            c_0_address0 <= "XXX";
        end if; 
    end process;


    c_0_ce0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_ce0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_0_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_0_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_0_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_ce0;
        else 
            c_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c_0_d0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_d0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_0_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_0_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_0_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_d0;
        else 
            c_0_d0 <= "XXXXXXXX";
        end if; 
    end process;


    c_0_we0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_we0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_0_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_0_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_0_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_0_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_0_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_0_we0;
        else 
            c_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c_1_address0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_address0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_1_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_1_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_1_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_address0;
        else 
            c_1_address0 <= "XXX";
        end if; 
    end process;


    c_1_ce0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_ce0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_1_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_1_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_1_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_ce0;
        else 
            c_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c_1_d0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_d0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_1_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_1_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_1_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_d0;
        else 
            c_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    c_1_we0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_we0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_1_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_1_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_1_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_1_we0;
        else 
            c_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c_2_address0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_address0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_2_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_2_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_2_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_address0;
        else 
            c_2_address0 <= "XXX";
        end if; 
    end process;


    c_2_ce0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_ce0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_2_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_2_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_2_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_ce0;
        else 
            c_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c_2_d0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_d0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_2_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_2_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_2_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_d0;
        else 
            c_2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    c_2_we0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_we0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_2_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_2_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_2_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_2_we0;
        else 
            c_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c_3_address0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_address0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_3_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_3_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_3_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_address0;
        else 
            c_3_address0 <= "XXX";
        end if; 
    end process;


    c_3_ce0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_ce0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_3_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_3_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_3_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_ce0;
        else 
            c_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c_3_d0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_d0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_3_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_3_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_3_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_d0;
        else 
            c_3_d0 <= "XXXXXXXX";
        end if; 
    end process;


    c_3_we0_assign_proc : process(ap_CS_fsm_state33, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_we0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            c_3_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_c_3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            c_3_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_c_3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c_3_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_c_3_we0;
        else 
            c_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_LOADBYTES_fu_650_ap_start <= grp_LOADBYTES_fu_650_ap_start_reg;

    grp_LOADBYTES_fu_650_bytes_read_assign_proc : process(p_read1, p_read17, p_read49, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read <= p_read1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read <= p_read17;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read <= p_read49;
        else 
            grp_LOADBYTES_fu_650_bytes_read <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_47_assign_proc : process(p_read2, p_read18, p_read50, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_47 <= p_read2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_47 <= p_read18;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_47 <= p_read50;
        else 
            grp_LOADBYTES_fu_650_bytes_read_47 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_48_assign_proc : process(p_read3, p_read19, p_read51, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_48 <= p_read3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_48 <= p_read19;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_48 <= p_read51;
        else 
            grp_LOADBYTES_fu_650_bytes_read_48 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_49_assign_proc : process(p_read4, p_read20, p_read52, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_49 <= p_read4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_49 <= p_read20;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_49 <= p_read52;
        else 
            grp_LOADBYTES_fu_650_bytes_read_49 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_50_assign_proc : process(p_read5, p_read21, p_read53, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_50 <= p_read5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_50 <= p_read21;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_50 <= p_read53;
        else 
            grp_LOADBYTES_fu_650_bytes_read_50 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_51_assign_proc : process(p_read6, p_read22, p_read54, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_51 <= p_read6;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_51 <= p_read22;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_51 <= p_read54;
        else 
            grp_LOADBYTES_fu_650_bytes_read_51 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_52_assign_proc : process(p_read7, p_read23, p_read55, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_52 <= p_read7;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_52 <= p_read23;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_52 <= p_read55;
        else 
            grp_LOADBYTES_fu_650_bytes_read_52 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_53_assign_proc : process(p_read8, p_read24, p_read56, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_53 <= p_read8;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_53 <= p_read24;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_53 <= p_read56;
        else 
            grp_LOADBYTES_fu_650_bytes_read_53 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_54_assign_proc : process(p_read9, p_read25, p_read57, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_54 <= p_read9;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_54 <= p_read25;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_54 <= p_read57;
        else 
            grp_LOADBYTES_fu_650_bytes_read_54 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_55_assign_proc : process(p_read10, p_read26, p_read58, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_55 <= p_read10;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_55 <= p_read26;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_55 <= p_read58;
        else 
            grp_LOADBYTES_fu_650_bytes_read_55 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_56_assign_proc : process(p_read11, p_read27, p_read59, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_56 <= p_read11;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_56 <= p_read27;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_56 <= p_read59;
        else 
            grp_LOADBYTES_fu_650_bytes_read_56 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_57_assign_proc : process(p_read12, p_read28, p_read60, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_57 <= p_read12;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_57 <= p_read28;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_57 <= p_read60;
        else 
            grp_LOADBYTES_fu_650_bytes_read_57 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_58_assign_proc : process(p_read13, p_read29, p_read61, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_58 <= p_read13;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_58 <= p_read29;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_58 <= p_read61;
        else 
            grp_LOADBYTES_fu_650_bytes_read_58 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_59_assign_proc : process(p_read14, p_read30, p_read62, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_59 <= p_read14;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_59 <= p_read30;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_59 <= p_read62;
        else 
            grp_LOADBYTES_fu_650_bytes_read_59 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_60_assign_proc : process(p_read15, p_read31, p_read63, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_60 <= p_read15;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_60 <= p_read31;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_60 <= p_read63;
        else 
            grp_LOADBYTES_fu_650_bytes_read_60 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_bytes_read_61_assign_proc : process(p_read16, p_read32, p_read64, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            grp_LOADBYTES_fu_650_bytes_read_61 <= p_read16;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_LOADBYTES_fu_650_bytes_read_61 <= p_read32;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_fu_650_bytes_read_61 <= p_read64;
        else 
            grp_LOADBYTES_fu_650_bytes_read_61 <= "XXXXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_idx_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, trunc_ln40_reg_1706, trunc_ln58_reg_1765, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            grp_LOADBYTES_fu_650_idx <= trunc_ln58_reg_1765;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_LOADBYTES_fu_650_idx <= trunc_ln40_reg_1706;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_LOADBYTES_fu_650_idx <= ap_const_lv4_0;
        else 
            grp_LOADBYTES_fu_650_idx <= "XXXX";
        end if; 
    end process;


    grp_LOADBYTES_fu_650_n_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            grp_LOADBYTES_fu_650_n <= ap_const_lv4_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_LOADBYTES_fu_650_n <= ap_const_lv4_8;
        else 
            grp_LOADBYTES_fu_650_n <= "XXXX";
        end if; 
    end process;

    grp_LOADBYTES_fu_690_ap_start <= grp_LOADBYTES_fu_690_ap_start_reg;
    grp_LOADBYTES_fu_730_ap_start <= grp_LOADBYTES_fu_730_ap_start_reg;
    grp_LOADBYTES_fu_770_ap_start <= grp_LOADBYTES_fu_770_ap_start_reg;

    grp_ROUND_6_fu_811_C_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state13, ap_CS_fsm_state29, ap_CS_fsm_state51, ap_CS_fsm_state22, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_4B;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_5A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_69;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_78;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_96;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_A5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_B4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_C3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_D2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_E1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_ROUND_6_fu_811_C <= ap_const_lv8_F0;
        else 
            grp_ROUND_6_fu_811_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_6_fu_811_s_0_read_assign_proc : process(reg_936, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state13, ap_CS_fsm_state29, s_0_64_reg_1774, ap_CS_fsm_state51, s_0_45_fu_1070_p2, ap_CS_fsm_state22, s_0_19_fu_1108_p2, ap_CS_fsm_state38, s_0_52_fu_1241_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_ROUND_6_fu_811_s_0_read <= s_0_52_fu_1241_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_ROUND_6_fu_811_s_0_read <= s_0_64_reg_1774;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_ROUND_6_fu_811_s_0_read <= s_0_19_fu_1108_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_6_fu_811_s_0_read <= s_0_45_fu_1070_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 
    = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_ROUND_6_fu_811_s_0_read <= reg_936;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_ROUND_6_fu_811_s_0_read <= ap_const_lv64_80400C0600000000;
        else 
            grp_ROUND_6_fu_811_s_0_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_6_fu_811_s_1_read_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, reg_941, grp_LOADBYTES_fu_650_ap_return, ap_CS_fsm_state13, ap_CS_fsm_state29, ap_CS_fsm_state51, ap_CS_fsm_state22, ap_CS_fsm_state38, s_1_49_fu_1248_p2, s_1_0_fu_222, s_1_1_27_fu_250)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_ROUND_6_fu_811_s_1_read <= s_1_49_fu_1248_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_ROUND_6_fu_811_s_1_read <= s_1_1_27_fu_250;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_6_fu_811_s_1_read <= s_1_0_fu_222;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 
    = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_ROUND_6_fu_811_s_1_read <= reg_941;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_ROUND_6_fu_811_s_1_read <= grp_LOADBYTES_fu_650_ap_return;
        else 
            grp_ROUND_6_fu_811_s_1_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_6_fu_811_s_2_read_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, reg_946, grp_LOADBYTES_fu_690_ap_return, ap_CS_fsm_state13, ap_CS_fsm_state29, ap_CS_fsm_state51, ap_CS_fsm_state22, ap_CS_fsm_state38, s_2_49_fu_1254_p2, s_2_0_fu_226, s_2_1_28_fu_254)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_ROUND_6_fu_811_s_2_read <= s_2_49_fu_1254_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_ROUND_6_fu_811_s_2_read <= s_2_1_28_fu_254;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_6_fu_811_s_2_read <= s_2_0_fu_226;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 
    = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_ROUND_6_fu_811_s_2_read <= reg_946;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_ROUND_6_fu_811_s_2_read <= grp_LOADBYTES_fu_690_ap_return;
        else 
            grp_ROUND_6_fu_811_s_2_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_6_fu_811_s_3_read_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, reg_951, ap_CS_fsm_state13, ap_CS_fsm_state29, ap_CS_fsm_state51, grp_LOADBYTES_fu_730_ap_return, ap_CS_fsm_state22, ap_CS_fsm_state38, s_3_0_fu_230, s_3_1_29_fu_258)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            grp_ROUND_6_fu_811_s_3_read <= s_3_1_29_fu_258;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_6_fu_811_s_3_read <= s_3_0_fu_230;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 
    = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_ROUND_6_fu_811_s_3_read <= reg_951;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_ROUND_6_fu_811_s_3_read <= grp_LOADBYTES_fu_730_ap_return;
        else 
            grp_ROUND_6_fu_811_s_3_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_6_fu_811_s_4_read_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, reg_956, ap_CS_fsm_state13, ap_CS_fsm_state29, ap_CS_fsm_state51, grp_LOADBYTES_fu_770_ap_return, ap_CS_fsm_state22, ap_CS_fsm_state38, s_4_0_fu_234, s_4_1_30_fu_262)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            grp_ROUND_6_fu_811_s_4_read <= s_4_1_30_fu_262;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_6_fu_811_s_4_read <= s_4_0_fu_234;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 
    = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_ROUND_6_fu_811_s_4_read <= reg_956;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_ROUND_6_fu_811_s_4_read <= grp_LOADBYTES_fu_770_ap_return;
        else 
            grp_ROUND_6_fu_811_s_4_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_852_ap_start_reg;
    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_12_fu_865_ap_start_reg;
    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_838_ap_start_reg;
    icmp_ln40_fu_1029_p2 <= "1" when (tmp_4_fu_1019_p4 = ap_const_lv2_0) else "0";
    icmp_ln58_fu_1175_p2 <= "1" when (tmp_5_fu_1165_p4 = ap_const_lv2_0) else "0";
    s_0_19_fu_1108_p2 <= (xor_ln49_fu_1102_p2 xor ap_const_lv64_8000000000000000);
    s_0_45_fu_1070_p2 <= (s_0_0_fu_218 xor reg_961);
    s_0_52_fu_1241_p2 <= (xor_ln70_fu_1235_p2 xor ap_const_lv64_8000000000000000);
    s_0_64_fu_1203_p2 <= (s_0_1_26_fu_246 xor grp_LOADBYTES_fu_650_ap_return);
    s_1_49_fu_1248_p2 <= (s_1_1_27_fu_250 xor K0_reg_1519);
    s_2_49_fu_1254_p2 <= (s_2_1_28_fu_254 xor K1_reg_1526);
    s_3_14_fu_983_p2 <= (grp_ROUND_6_fu_811_ap_return_3 xor K0_reg_1519);
    s_3_63_fu_1268_p2 <= (grp_ROUND_6_fu_811_ap_return_3 xor K0_reg_1519);
    s_4_13_fu_988_p2 <= (grp_ROUND_6_fu_811_ap_return_4 xor K1_reg_1526);
    s_4_26_fu_1119_p2 <= (grp_ROUND_6_fu_811_ap_return_4 xor ap_const_lv64_1);
    tmp_4_fu_1019_p4 <= adlen_assign_fu_214(4 downto 3);
    tmp_5_fu_1165_p4 <= mlen_assign_fu_242(4 downto 3);
    trunc_ln40_fu_1038_p1 <= idx_fu_210(4 - 1 downto 0);
    trunc_ln58_fu_1160_p1 <= idx53_fu_238(4 - 1 downto 0);
    xor_ln49_fu_1102_p2 <= (s_0_0_fu_218 xor reg_961);
    xor_ln70_fu_1235_p2 <= (s_0_1_26_fu_246 xor reg_961);
    xor_ln80_fu_1273_p2 <= (grp_ROUND_6_fu_811_ap_return_4 xor K1_reg_1526);
end behav;
