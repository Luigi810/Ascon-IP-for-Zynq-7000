// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axi_encrypt_axi_encrypt,hls_ip_2023_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.008000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=5106,HLS_SYN_LUT=14976,HLS_VERSION=2023_2}" *)

module axi_encrypt (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 64;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] c;
wire   [63:0] m;
wire   [63:0] ad;
wire   [63:0] nsec;
wire   [63:0] npub;
wire   [63:0] k;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
reg   [63:0] reg_630;
wire    gmem_AWREADY;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [63:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg   [63:0] reg_635;
reg   [60:0] trunc_ln_reg_1177;
reg   [60:0] trunc_ln2_reg_1182;
reg   [60:0] trunc_ln3_reg_1187;
reg   [60:0] trunc_ln4_reg_1192;
reg   [60:0] trunc_ln5_reg_1197;
reg   [60:0] trunc_ln6_reg_1202;
reg   [63:0] gmem_addr_read_2_reg_1243;
reg   [63:0] gmem_addr_1_read_reg_1248;
reg   [63:0] gmem_addr_1_read_1_reg_1253;
reg   [63:0] gmem_addr_2_read_reg_1258;
reg   [63:0] gmem_addr_2_read_1_reg_1263;
reg   [63:0] gmem_addr_4_read_reg_1268;
reg   [63:0] gmem_addr_4_read_1_reg_1273;
reg   [7:0] m_u8_16_reg_1278;
reg   [7:0] m_u8_17_reg_1283;
reg   [7:0] m_u8_18_reg_1288;
reg   [7:0] m_u8_19_reg_1293;
reg   [7:0] m_u8_20_reg_1298;
reg   [7:0] m_u8_21_reg_1303;
reg   [7:0] m_u8_22_reg_1308;
reg   [7:0] m_u8_23_reg_1313;
reg   [7:0] m_u8_24_reg_1318;
reg   [7:0] m_u8_25_reg_1323;
reg   [7:0] m_u8_26_reg_1328;
reg   [7:0] m_u8_27_reg_1333;
reg   [7:0] m_u8_28_reg_1338;
reg   [7:0] m_u8_29_reg_1343;
reg   [7:0] m_u8_30_reg_1348;
reg   [7:0] m_u8_31_reg_1353;
reg   [7:0] ad_u8_16_reg_1358;
reg   [7:0] ad_u8_17_reg_1363;
reg   [7:0] ad_u8_18_reg_1368;
reg   [7:0] ad_u8_19_reg_1373;
reg   [7:0] ad_u8_20_reg_1378;
reg   [7:0] ad_u8_21_reg_1383;
reg   [7:0] ad_u8_22_reg_1388;
reg   [7:0] ad_u8_23_reg_1393;
reg   [7:0] ad_u8_24_reg_1398;
reg   [7:0] ad_u8_25_reg_1403;
reg   [7:0] ad_u8_26_reg_1408;
reg   [7:0] ad_u8_27_reg_1413;
reg   [7:0] ad_u8_28_reg_1418;
reg   [7:0] ad_u8_29_reg_1423;
reg   [7:0] ad_u8_30_reg_1428;
reg   [7:0] ad_u8_31_reg_1433;
reg   [7:0] npub_u8_16_reg_1438;
reg   [7:0] npub_u8_17_reg_1443;
reg   [7:0] npub_u8_18_reg_1448;
reg   [7:0] npub_u8_19_reg_1453;
reg   [7:0] npub_u8_20_reg_1458;
reg   [7:0] npub_u8_21_reg_1463;
reg   [7:0] npub_u8_22_reg_1468;
reg   [7:0] npub_u8_23_reg_1473;
reg   [7:0] npub_u8_24_reg_1478;
reg   [7:0] npub_u8_25_reg_1483;
reg   [7:0] npub_u8_26_reg_1488;
reg   [7:0] npub_u8_27_reg_1493;
reg   [7:0] npub_u8_28_reg_1498;
reg   [7:0] npub_u8_29_reg_1503;
reg   [7:0] npub_u8_30_reg_1508;
reg   [7:0] npub_u8_31_reg_1513;
reg   [7:0] k_u8_reg_1518;
reg   [7:0] k_u8_1_reg_1523;
reg   [7:0] k_u8_2_reg_1528;
reg   [7:0] k_u8_3_reg_1533;
reg   [7:0] k_u8_4_reg_1538;
reg   [7:0] k_u8_5_reg_1543;
reg   [7:0] k_u8_6_reg_1548;
reg   [7:0] k_u8_7_reg_1553;
reg   [7:0] k_u8_8_reg_1558;
reg   [7:0] k_u8_9_reg_1563;
reg   [7:0] k_u8_10_reg_1568;
reg   [7:0] k_u8_11_reg_1573;
reg   [7:0] k_u8_12_reg_1578;
reg   [7:0] k_u8_13_reg_1583;
reg   [7:0] k_u8_14_reg_1588;
reg   [7:0] k_u8_15_reg_1593;
reg   [7:0] k_u8_16_reg_1598;
wire    ap_CS_fsm_state24;
reg   [7:0] k_u8_17_reg_1603;
reg   [7:0] k_u8_18_reg_1608;
reg   [7:0] k_u8_19_reg_1613;
reg   [7:0] k_u8_20_reg_1618;
reg   [7:0] k_u8_21_reg_1623;
reg   [7:0] k_u8_22_reg_1628;
reg   [7:0] k_u8_23_reg_1633;
reg   [7:0] k_u8_24_reg_1638;
reg   [7:0] k_u8_25_reg_1643;
reg   [7:0] k_u8_26_reg_1648;
reg   [7:0] k_u8_27_reg_1653;
reg   [7:0] k_u8_28_reg_1658;
reg   [7:0] k_u8_29_reg_1663;
reg   [7:0] k_u8_30_reg_1668;
reg   [7:0] k_u8_31_reg_1673;
reg   [2:0] c_u8_address0;
reg    c_u8_ce0;
reg    c_u8_we0;
reg   [7:0] c_u8_d0;
reg   [2:0] c_u8_1_address0;
reg    c_u8_1_ce0;
reg    c_u8_1_we0;
reg   [7:0] c_u8_1_d0;
reg   [2:0] c_u8_2_address0;
reg    c_u8_2_ce0;
reg    c_u8_2_we0;
reg   [7:0] c_u8_2_d0;
reg   [2:0] c_u8_3_address0;
reg    c_u8_3_ce0;
reg    c_u8_3_we0;
reg   [7:0] c_u8_3_d0;
wire    grp_u64_to_u8_array_fu_222_ap_start;
wire    grp_u64_to_u8_array_fu_222_ap_done;
wire    grp_u64_to_u8_array_fu_222_ap_idle;
wire    grp_u64_to_u8_array_fu_222_ap_ready;
reg   [63:0] grp_u64_to_u8_array_fu_222_a;
wire   [2:0] grp_u64_to_u8_array_fu_222_b_0_address0;
wire    grp_u64_to_u8_array_fu_222_b_0_ce0;
wire    grp_u64_to_u8_array_fu_222_b_0_we0;
wire   [7:0] grp_u64_to_u8_array_fu_222_b_0_d0;
wire   [2:0] grp_u64_to_u8_array_fu_222_b_1_address0;
wire    grp_u64_to_u8_array_fu_222_b_1_ce0;
wire    grp_u64_to_u8_array_fu_222_b_1_we0;
wire   [7:0] grp_u64_to_u8_array_fu_222_b_1_d0;
wire   [2:0] grp_u64_to_u8_array_fu_222_b_2_address0;
wire    grp_u64_to_u8_array_fu_222_b_2_ce0;
wire    grp_u64_to_u8_array_fu_222_b_2_we0;
wire   [7:0] grp_u64_to_u8_array_fu_222_b_2_d0;
wire   [2:0] grp_u64_to_u8_array_fu_222_b_3_address0;
wire    grp_u64_to_u8_array_fu_222_b_3_ce0;
wire    grp_u64_to_u8_array_fu_222_b_3_we0;
wire   [7:0] grp_u64_to_u8_array_fu_222_b_3_d0;
reg   [4:0] grp_u64_to_u8_array_fu_222_idx;
reg    grp_u64_to_u8_array_fu_222_ap_ce;
wire    grp_u64_to_u8_array_clone_fu_236_ap_ready;
reg   [63:0] grp_u64_to_u8_array_clone_fu_236_a;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read1;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read2;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read3;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read4;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read5;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read6;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read7;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read8;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read9;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read10;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read11;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read12;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read13;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read14;
reg   [7:0] grp_u64_to_u8_array_clone_fu_236_p_read15;
reg   [3:0] grp_u64_to_u8_array_clone_fu_236_idx;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_0;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_1;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_2;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_3;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_4;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_5;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_6;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_7;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_8;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_9;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_10;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_11;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_12;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_13;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_14;
wire   [7:0] grp_u64_to_u8_array_clone_fu_236_ap_return_15;
wire    call_ret43_u64_to_u8_array_clone_fu_275_ap_ready;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_0;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_1;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_2;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_3;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_4;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_5;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_6;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_7;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_8;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_9;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_10;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_11;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_12;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_13;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_14;
wire   [7:0] call_ret43_u64_to_u8_array_clone_fu_275_ap_return_15;
wire    call_ret44_u64_to_u8_array_clone_fu_298_ap_ready;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read1;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read2;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read3;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read4;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read5;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read6;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read7;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read8;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read9;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read10;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read11;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read12;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read13;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read14;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_p_read15;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_0;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_1;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_2;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_3;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_4;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_5;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_6;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_7;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_8;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_9;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_10;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_11;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_12;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_13;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_14;
wire   [7:0] call_ret44_u64_to_u8_array_clone_fu_298_ap_return_15;
wire    call_ret45_u64_to_u8_array_clone_fu_337_ap_ready;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_0;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_1;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_2;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_3;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_4;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_5;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_6;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_7;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_8;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_9;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_10;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_11;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_12;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_13;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_14;
wire   [7:0] call_ret45_u64_to_u8_array_clone_fu_337_ap_return_15;
wire    call_ret46_u64_to_u8_array_clone_fu_360_ap_ready;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read1;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read2;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read3;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read4;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read5;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read6;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read7;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read8;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read9;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read10;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read11;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read12;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read13;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read14;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_p_read15;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_0;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_1;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_2;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_3;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_4;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_5;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_6;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_7;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_8;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_9;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_10;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_11;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_12;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_13;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_14;
wire   [7:0] call_ret46_u64_to_u8_array_clone_fu_360_ap_return_15;
wire    call_ret47_u64_to_u8_array_clone_fu_399_ap_ready;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_0;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_1;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_2;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_3;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_4;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_5;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_6;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_7;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_8;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_9;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_10;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_11;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_12;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_13;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_14;
wire   [7:0] call_ret47_u64_to_u8_array_clone_fu_399_ap_return_15;
wire    call_ret48_u64_to_u8_array_clone_fu_422_ap_ready;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read1;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read2;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read3;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read4;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read5;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read6;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read7;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read8;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read9;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read10;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read11;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read12;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read13;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read14;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_p_read15;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_0;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_1;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_2;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_3;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_4;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_5;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_6;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_7;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_8;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_9;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_10;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_11;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_12;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_13;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_14;
wire   [7:0] call_ret48_u64_to_u8_array_clone_fu_422_ap_return_15;
wire    grp_crypto_aead_encrypt_fu_462_ap_start;
wire    grp_crypto_aead_encrypt_fu_462_ap_done;
wire    grp_crypto_aead_encrypt_fu_462_ap_idle;
wire    grp_crypto_aead_encrypt_fu_462_ap_ready;
wire   [2:0] grp_crypto_aead_encrypt_fu_462_c_0_address0;
wire    grp_crypto_aead_encrypt_fu_462_c_0_ce0;
wire    grp_crypto_aead_encrypt_fu_462_c_0_we0;
wire   [7:0] grp_crypto_aead_encrypt_fu_462_c_0_d0;
wire   [2:0] grp_crypto_aead_encrypt_fu_462_c_1_address0;
wire    grp_crypto_aead_encrypt_fu_462_c_1_ce0;
wire    grp_crypto_aead_encrypt_fu_462_c_1_we0;
wire   [7:0] grp_crypto_aead_encrypt_fu_462_c_1_d0;
wire   [2:0] grp_crypto_aead_encrypt_fu_462_c_2_address0;
wire    grp_crypto_aead_encrypt_fu_462_c_2_ce0;
wire    grp_crypto_aead_encrypt_fu_462_c_2_we0;
wire   [7:0] grp_crypto_aead_encrypt_fu_462_c_2_d0;
wire   [2:0] grp_crypto_aead_encrypt_fu_462_c_3_address0;
wire    grp_crypto_aead_encrypt_fu_462_c_3_ce0;
wire    grp_crypto_aead_encrypt_fu_462_c_3_we0;
wire   [7:0] grp_crypto_aead_encrypt_fu_462_c_3_d0;
reg    grp_u64_to_u8_array_fu_222_ap_start_reg;
reg   [24:0] ap_NS_fsm;
wire    ap_NS_fsm_state11;
wire    ap_NS_fsm_state13;
wire    ap_NS_fsm_state15;
wire    ap_NS_fsm_state17;
reg    grp_crypto_aead_encrypt_fu_462_ap_start_reg;
wire    ap_CS_fsm_state25;
wire  signed [63:0] sext_ln125_fu_701_p1;
wire  signed [63:0] sext_ln130_fu_711_p1;
wire  signed [63:0] sext_ln133_fu_721_p1;
wire  signed [63:0] sext_ln136_fu_731_p1;
wire  signed [63:0] sext_ln139_fu_741_p1;
wire  signed [63:0] sext_ln142_fu_751_p1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
wire    ap_ce_reg;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 grp_u64_to_u8_array_fu_222_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_fu_462_ap_start_reg = 1'b0;
end

axi_encrypt_c_u8_RAM_AUTO_0R0W #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
c_u8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_u8_address0),
    .ce0(c_u8_ce0),
    .we0(c_u8_we0),
    .d0(c_u8_d0)
);

axi_encrypt_c_u8_RAM_AUTO_0R0W #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
c_u8_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_u8_1_address0),
    .ce0(c_u8_1_ce0),
    .we0(c_u8_1_we0),
    .d0(c_u8_1_d0)
);

axi_encrypt_c_u8_RAM_AUTO_0R0W #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
c_u8_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_u8_2_address0),
    .ce0(c_u8_2_ce0),
    .we0(c_u8_2_we0),
    .d0(c_u8_2_d0)
);

axi_encrypt_c_u8_RAM_AUTO_0R0W #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
c_u8_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_u8_3_address0),
    .ce0(c_u8_3_ce0),
    .we0(c_u8_3_we0),
    .d0(c_u8_3_d0)
);

axi_encrypt_u64_to_u8_array grp_u64_to_u8_array_fu_222(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_u64_to_u8_array_fu_222_ap_start),
    .ap_done(grp_u64_to_u8_array_fu_222_ap_done),
    .ap_idle(grp_u64_to_u8_array_fu_222_ap_idle),
    .ap_ready(grp_u64_to_u8_array_fu_222_ap_ready),
    .a(grp_u64_to_u8_array_fu_222_a),
    .b_0_address0(grp_u64_to_u8_array_fu_222_b_0_address0),
    .b_0_ce0(grp_u64_to_u8_array_fu_222_b_0_ce0),
    .b_0_we0(grp_u64_to_u8_array_fu_222_b_0_we0),
    .b_0_d0(grp_u64_to_u8_array_fu_222_b_0_d0),
    .b_1_address0(grp_u64_to_u8_array_fu_222_b_1_address0),
    .b_1_ce0(grp_u64_to_u8_array_fu_222_b_1_ce0),
    .b_1_we0(grp_u64_to_u8_array_fu_222_b_1_we0),
    .b_1_d0(grp_u64_to_u8_array_fu_222_b_1_d0),
    .b_2_address0(grp_u64_to_u8_array_fu_222_b_2_address0),
    .b_2_ce0(grp_u64_to_u8_array_fu_222_b_2_ce0),
    .b_2_we0(grp_u64_to_u8_array_fu_222_b_2_we0),
    .b_2_d0(grp_u64_to_u8_array_fu_222_b_2_d0),
    .b_3_address0(grp_u64_to_u8_array_fu_222_b_3_address0),
    .b_3_ce0(grp_u64_to_u8_array_fu_222_b_3_ce0),
    .b_3_we0(grp_u64_to_u8_array_fu_222_b_3_we0),
    .b_3_d0(grp_u64_to_u8_array_fu_222_b_3_d0),
    .idx(grp_u64_to_u8_array_fu_222_idx),
    .ap_ce(grp_u64_to_u8_array_fu_222_ap_ce)
);

axi_encrypt_u64_to_u8_array_clone grp_u64_to_u8_array_clone_fu_236(
    .ap_ready(grp_u64_to_u8_array_clone_fu_236_ap_ready),
    .a(grp_u64_to_u8_array_clone_fu_236_a),
    .p_read(grp_u64_to_u8_array_clone_fu_236_p_read),
    .p_read1(grp_u64_to_u8_array_clone_fu_236_p_read1),
    .p_read2(grp_u64_to_u8_array_clone_fu_236_p_read2),
    .p_read3(grp_u64_to_u8_array_clone_fu_236_p_read3),
    .p_read4(grp_u64_to_u8_array_clone_fu_236_p_read4),
    .p_read5(grp_u64_to_u8_array_clone_fu_236_p_read5),
    .p_read6(grp_u64_to_u8_array_clone_fu_236_p_read6),
    .p_read7(grp_u64_to_u8_array_clone_fu_236_p_read7),
    .p_read8(grp_u64_to_u8_array_clone_fu_236_p_read8),
    .p_read9(grp_u64_to_u8_array_clone_fu_236_p_read9),
    .p_read10(grp_u64_to_u8_array_clone_fu_236_p_read10),
    .p_read11(grp_u64_to_u8_array_clone_fu_236_p_read11),
    .p_read12(grp_u64_to_u8_array_clone_fu_236_p_read12),
    .p_read13(grp_u64_to_u8_array_clone_fu_236_p_read13),
    .p_read14(grp_u64_to_u8_array_clone_fu_236_p_read14),
    .p_read15(grp_u64_to_u8_array_clone_fu_236_p_read15),
    .idx(grp_u64_to_u8_array_clone_fu_236_idx),
    .ap_return_0(grp_u64_to_u8_array_clone_fu_236_ap_return_0),
    .ap_return_1(grp_u64_to_u8_array_clone_fu_236_ap_return_1),
    .ap_return_2(grp_u64_to_u8_array_clone_fu_236_ap_return_2),
    .ap_return_3(grp_u64_to_u8_array_clone_fu_236_ap_return_3),
    .ap_return_4(grp_u64_to_u8_array_clone_fu_236_ap_return_4),
    .ap_return_5(grp_u64_to_u8_array_clone_fu_236_ap_return_5),
    .ap_return_6(grp_u64_to_u8_array_clone_fu_236_ap_return_6),
    .ap_return_7(grp_u64_to_u8_array_clone_fu_236_ap_return_7),
    .ap_return_8(grp_u64_to_u8_array_clone_fu_236_ap_return_8),
    .ap_return_9(grp_u64_to_u8_array_clone_fu_236_ap_return_9),
    .ap_return_10(grp_u64_to_u8_array_clone_fu_236_ap_return_10),
    .ap_return_11(grp_u64_to_u8_array_clone_fu_236_ap_return_11),
    .ap_return_12(grp_u64_to_u8_array_clone_fu_236_ap_return_12),
    .ap_return_13(grp_u64_to_u8_array_clone_fu_236_ap_return_13),
    .ap_return_14(grp_u64_to_u8_array_clone_fu_236_ap_return_14),
    .ap_return_15(grp_u64_to_u8_array_clone_fu_236_ap_return_15)
);

axi_encrypt_u64_to_u8_array_clone call_ret43_u64_to_u8_array_clone_fu_275(
    .ap_ready(call_ret43_u64_to_u8_array_clone_fu_275_ap_ready),
    .a(gmem_addr_1_read_1_reg_1253),
    .p_read(grp_u64_to_u8_array_clone_fu_236_ap_return_0),
    .p_read1(grp_u64_to_u8_array_clone_fu_236_ap_return_1),
    .p_read2(grp_u64_to_u8_array_clone_fu_236_ap_return_2),
    .p_read3(grp_u64_to_u8_array_clone_fu_236_ap_return_3),
    .p_read4(grp_u64_to_u8_array_clone_fu_236_ap_return_4),
    .p_read5(grp_u64_to_u8_array_clone_fu_236_ap_return_5),
    .p_read6(grp_u64_to_u8_array_clone_fu_236_ap_return_6),
    .p_read7(grp_u64_to_u8_array_clone_fu_236_ap_return_7),
    .p_read8(grp_u64_to_u8_array_clone_fu_236_ap_return_8),
    .p_read9(grp_u64_to_u8_array_clone_fu_236_ap_return_9),
    .p_read10(grp_u64_to_u8_array_clone_fu_236_ap_return_10),
    .p_read11(grp_u64_to_u8_array_clone_fu_236_ap_return_11),
    .p_read12(grp_u64_to_u8_array_clone_fu_236_ap_return_12),
    .p_read13(grp_u64_to_u8_array_clone_fu_236_ap_return_13),
    .p_read14(grp_u64_to_u8_array_clone_fu_236_ap_return_14),
    .p_read15(grp_u64_to_u8_array_clone_fu_236_ap_return_15),
    .idx(4'd8),
    .ap_return_0(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_0),
    .ap_return_1(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_1),
    .ap_return_2(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_2),
    .ap_return_3(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_3),
    .ap_return_4(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_4),
    .ap_return_5(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_5),
    .ap_return_6(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_6),
    .ap_return_7(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_7),
    .ap_return_8(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_8),
    .ap_return_9(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_9),
    .ap_return_10(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_10),
    .ap_return_11(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_11),
    .ap_return_12(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_12),
    .ap_return_13(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_13),
    .ap_return_14(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_14),
    .ap_return_15(call_ret43_u64_to_u8_array_clone_fu_275_ap_return_15)
);

axi_encrypt_u64_to_u8_array_clone call_ret44_u64_to_u8_array_clone_fu_298(
    .ap_ready(call_ret44_u64_to_u8_array_clone_fu_298_ap_ready),
    .a(gmem_addr_2_read_reg_1258),
    .p_read(call_ret44_u64_to_u8_array_clone_fu_298_p_read),
    .p_read1(call_ret44_u64_to_u8_array_clone_fu_298_p_read1),
    .p_read2(call_ret44_u64_to_u8_array_clone_fu_298_p_read2),
    .p_read3(call_ret44_u64_to_u8_array_clone_fu_298_p_read3),
    .p_read4(call_ret44_u64_to_u8_array_clone_fu_298_p_read4),
    .p_read5(call_ret44_u64_to_u8_array_clone_fu_298_p_read5),
    .p_read6(call_ret44_u64_to_u8_array_clone_fu_298_p_read6),
    .p_read7(call_ret44_u64_to_u8_array_clone_fu_298_p_read7),
    .p_read8(call_ret44_u64_to_u8_array_clone_fu_298_p_read8),
    .p_read9(call_ret44_u64_to_u8_array_clone_fu_298_p_read9),
    .p_read10(call_ret44_u64_to_u8_array_clone_fu_298_p_read10),
    .p_read11(call_ret44_u64_to_u8_array_clone_fu_298_p_read11),
    .p_read12(call_ret44_u64_to_u8_array_clone_fu_298_p_read12),
    .p_read13(call_ret44_u64_to_u8_array_clone_fu_298_p_read13),
    .p_read14(call_ret44_u64_to_u8_array_clone_fu_298_p_read14),
    .p_read15(call_ret44_u64_to_u8_array_clone_fu_298_p_read15),
    .idx(4'd0),
    .ap_return_0(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_0),
    .ap_return_1(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_1),
    .ap_return_2(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_2),
    .ap_return_3(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_3),
    .ap_return_4(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_4),
    .ap_return_5(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_5),
    .ap_return_6(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_6),
    .ap_return_7(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_7),
    .ap_return_8(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_8),
    .ap_return_9(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_9),
    .ap_return_10(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_10),
    .ap_return_11(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_11),
    .ap_return_12(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_12),
    .ap_return_13(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_13),
    .ap_return_14(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_14),
    .ap_return_15(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_15)
);

axi_encrypt_u64_to_u8_array_clone call_ret45_u64_to_u8_array_clone_fu_337(
    .ap_ready(call_ret45_u64_to_u8_array_clone_fu_337_ap_ready),
    .a(gmem_addr_2_read_1_reg_1263),
    .p_read(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_0),
    .p_read1(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_1),
    .p_read2(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_2),
    .p_read3(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_3),
    .p_read4(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_4),
    .p_read5(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_5),
    .p_read6(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_6),
    .p_read7(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_7),
    .p_read8(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_8),
    .p_read9(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_9),
    .p_read10(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_10),
    .p_read11(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_11),
    .p_read12(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_12),
    .p_read13(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_13),
    .p_read14(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_14),
    .p_read15(call_ret44_u64_to_u8_array_clone_fu_298_ap_return_15),
    .idx(4'd8),
    .ap_return_0(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_0),
    .ap_return_1(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_1),
    .ap_return_2(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_2),
    .ap_return_3(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_3),
    .ap_return_4(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_4),
    .ap_return_5(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_5),
    .ap_return_6(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_6),
    .ap_return_7(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_7),
    .ap_return_8(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_8),
    .ap_return_9(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_9),
    .ap_return_10(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_10),
    .ap_return_11(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_11),
    .ap_return_12(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_12),
    .ap_return_13(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_13),
    .ap_return_14(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_14),
    .ap_return_15(call_ret45_u64_to_u8_array_clone_fu_337_ap_return_15)
);

axi_encrypt_u64_to_u8_array_clone call_ret46_u64_to_u8_array_clone_fu_360(
    .ap_ready(call_ret46_u64_to_u8_array_clone_fu_360_ap_ready),
    .a(gmem_addr_4_read_reg_1268),
    .p_read(call_ret46_u64_to_u8_array_clone_fu_360_p_read),
    .p_read1(call_ret46_u64_to_u8_array_clone_fu_360_p_read1),
    .p_read2(call_ret46_u64_to_u8_array_clone_fu_360_p_read2),
    .p_read3(call_ret46_u64_to_u8_array_clone_fu_360_p_read3),
    .p_read4(call_ret46_u64_to_u8_array_clone_fu_360_p_read4),
    .p_read5(call_ret46_u64_to_u8_array_clone_fu_360_p_read5),
    .p_read6(call_ret46_u64_to_u8_array_clone_fu_360_p_read6),
    .p_read7(call_ret46_u64_to_u8_array_clone_fu_360_p_read7),
    .p_read8(call_ret46_u64_to_u8_array_clone_fu_360_p_read8),
    .p_read9(call_ret46_u64_to_u8_array_clone_fu_360_p_read9),
    .p_read10(call_ret46_u64_to_u8_array_clone_fu_360_p_read10),
    .p_read11(call_ret46_u64_to_u8_array_clone_fu_360_p_read11),
    .p_read12(call_ret46_u64_to_u8_array_clone_fu_360_p_read12),
    .p_read13(call_ret46_u64_to_u8_array_clone_fu_360_p_read13),
    .p_read14(call_ret46_u64_to_u8_array_clone_fu_360_p_read14),
    .p_read15(call_ret46_u64_to_u8_array_clone_fu_360_p_read15),
    .idx(4'd0),
    .ap_return_0(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_0),
    .ap_return_1(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_1),
    .ap_return_2(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_2),
    .ap_return_3(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_3),
    .ap_return_4(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_4),
    .ap_return_5(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_5),
    .ap_return_6(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_6),
    .ap_return_7(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_7),
    .ap_return_8(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_8),
    .ap_return_9(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_9),
    .ap_return_10(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_10),
    .ap_return_11(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_11),
    .ap_return_12(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_12),
    .ap_return_13(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_13),
    .ap_return_14(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_14),
    .ap_return_15(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_15)
);

axi_encrypt_u64_to_u8_array_clone call_ret47_u64_to_u8_array_clone_fu_399(
    .ap_ready(call_ret47_u64_to_u8_array_clone_fu_399_ap_ready),
    .a(gmem_addr_4_read_1_reg_1273),
    .p_read(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_0),
    .p_read1(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_1),
    .p_read2(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_2),
    .p_read3(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_3),
    .p_read4(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_4),
    .p_read5(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_5),
    .p_read6(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_6),
    .p_read7(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_7),
    .p_read8(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_8),
    .p_read9(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_9),
    .p_read10(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_10),
    .p_read11(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_11),
    .p_read12(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_12),
    .p_read13(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_13),
    .p_read14(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_14),
    .p_read15(call_ret46_u64_to_u8_array_clone_fu_360_ap_return_15),
    .idx(4'd8),
    .ap_return_0(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_0),
    .ap_return_1(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_1),
    .ap_return_2(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_2),
    .ap_return_3(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_3),
    .ap_return_4(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_4),
    .ap_return_5(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_5),
    .ap_return_6(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_6),
    .ap_return_7(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_7),
    .ap_return_8(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_8),
    .ap_return_9(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_9),
    .ap_return_10(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_10),
    .ap_return_11(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_11),
    .ap_return_12(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_12),
    .ap_return_13(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_13),
    .ap_return_14(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_14),
    .ap_return_15(call_ret47_u64_to_u8_array_clone_fu_399_ap_return_15)
);

axi_encrypt_u64_to_u8_array_clone call_ret48_u64_to_u8_array_clone_fu_422(
    .ap_ready(call_ret48_u64_to_u8_array_clone_fu_422_ap_ready),
    .a(reg_635),
    .p_read(call_ret48_u64_to_u8_array_clone_fu_422_p_read),
    .p_read1(call_ret48_u64_to_u8_array_clone_fu_422_p_read1),
    .p_read2(call_ret48_u64_to_u8_array_clone_fu_422_p_read2),
    .p_read3(call_ret48_u64_to_u8_array_clone_fu_422_p_read3),
    .p_read4(call_ret48_u64_to_u8_array_clone_fu_422_p_read4),
    .p_read5(call_ret48_u64_to_u8_array_clone_fu_422_p_read5),
    .p_read6(call_ret48_u64_to_u8_array_clone_fu_422_p_read6),
    .p_read7(call_ret48_u64_to_u8_array_clone_fu_422_p_read7),
    .p_read8(call_ret48_u64_to_u8_array_clone_fu_422_p_read8),
    .p_read9(call_ret48_u64_to_u8_array_clone_fu_422_p_read9),
    .p_read10(call_ret48_u64_to_u8_array_clone_fu_422_p_read10),
    .p_read11(call_ret48_u64_to_u8_array_clone_fu_422_p_read11),
    .p_read12(call_ret48_u64_to_u8_array_clone_fu_422_p_read12),
    .p_read13(call_ret48_u64_to_u8_array_clone_fu_422_p_read13),
    .p_read14(call_ret48_u64_to_u8_array_clone_fu_422_p_read14),
    .p_read15(call_ret48_u64_to_u8_array_clone_fu_422_p_read15),
    .idx(4'd0),
    .ap_return_0(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_0),
    .ap_return_1(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_1),
    .ap_return_2(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_2),
    .ap_return_3(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_3),
    .ap_return_4(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_4),
    .ap_return_5(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_5),
    .ap_return_6(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_6),
    .ap_return_7(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_7),
    .ap_return_8(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_8),
    .ap_return_9(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_9),
    .ap_return_10(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_10),
    .ap_return_11(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_11),
    .ap_return_12(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_12),
    .ap_return_13(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_13),
    .ap_return_14(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_14),
    .ap_return_15(call_ret48_u64_to_u8_array_clone_fu_422_ap_return_15)
);

axi_encrypt_crypto_aead_encrypt grp_crypto_aead_encrypt_fu_462(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_crypto_aead_encrypt_fu_462_ap_start),
    .ap_done(grp_crypto_aead_encrypt_fu_462_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_fu_462_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_fu_462_ap_ready),
    .c_0_address0(grp_crypto_aead_encrypt_fu_462_c_0_address0),
    .c_0_ce0(grp_crypto_aead_encrypt_fu_462_c_0_ce0),
    .c_0_we0(grp_crypto_aead_encrypt_fu_462_c_0_we0),
    .c_0_d0(grp_crypto_aead_encrypt_fu_462_c_0_d0),
    .c_1_address0(grp_crypto_aead_encrypt_fu_462_c_1_address0),
    .c_1_ce0(grp_crypto_aead_encrypt_fu_462_c_1_ce0),
    .c_1_we0(grp_crypto_aead_encrypt_fu_462_c_1_we0),
    .c_1_d0(grp_crypto_aead_encrypt_fu_462_c_1_d0),
    .c_2_address0(grp_crypto_aead_encrypt_fu_462_c_2_address0),
    .c_2_ce0(grp_crypto_aead_encrypt_fu_462_c_2_ce0),
    .c_2_we0(grp_crypto_aead_encrypt_fu_462_c_2_we0),
    .c_2_d0(grp_crypto_aead_encrypt_fu_462_c_2_d0),
    .c_3_address0(grp_crypto_aead_encrypt_fu_462_c_3_address0),
    .c_3_ce0(grp_crypto_aead_encrypt_fu_462_c_3_ce0),
    .c_3_we0(grp_crypto_aead_encrypt_fu_462_c_3_we0),
    .c_3_d0(grp_crypto_aead_encrypt_fu_462_c_3_d0),
    .p_read1(m_u8_16_reg_1278),
    .p_read2(m_u8_17_reg_1283),
    .p_read3(m_u8_18_reg_1288),
    .p_read4(m_u8_19_reg_1293),
    .p_read5(m_u8_20_reg_1298),
    .p_read6(m_u8_21_reg_1303),
    .p_read7(m_u8_22_reg_1308),
    .p_read8(m_u8_23_reg_1313),
    .p_read9(m_u8_24_reg_1318),
    .p_read10(m_u8_25_reg_1323),
    .p_read11(m_u8_26_reg_1328),
    .p_read12(m_u8_27_reg_1333),
    .p_read13(m_u8_28_reg_1338),
    .p_read14(m_u8_29_reg_1343),
    .p_read15(m_u8_30_reg_1348),
    .p_read16(m_u8_31_reg_1353),
    .p_read17(ad_u8_16_reg_1358),
    .p_read18(ad_u8_17_reg_1363),
    .p_read19(ad_u8_18_reg_1368),
    .p_read20(ad_u8_19_reg_1373),
    .p_read21(ad_u8_20_reg_1378),
    .p_read22(ad_u8_21_reg_1383),
    .p_read23(ad_u8_22_reg_1388),
    .p_read24(ad_u8_23_reg_1393),
    .p_read25(ad_u8_24_reg_1398),
    .p_read26(ad_u8_25_reg_1403),
    .p_read27(ad_u8_26_reg_1408),
    .p_read28(ad_u8_27_reg_1413),
    .p_read29(ad_u8_28_reg_1418),
    .p_read30(ad_u8_29_reg_1423),
    .p_read31(ad_u8_30_reg_1428),
    .p_read32(ad_u8_31_reg_1433),
    .p_read33(npub_u8_16_reg_1438),
    .p_read34(npub_u8_17_reg_1443),
    .p_read35(npub_u8_18_reg_1448),
    .p_read36(npub_u8_19_reg_1453),
    .p_read37(npub_u8_20_reg_1458),
    .p_read38(npub_u8_21_reg_1463),
    .p_read39(npub_u8_22_reg_1468),
    .p_read40(npub_u8_23_reg_1473),
    .p_read41(npub_u8_24_reg_1478),
    .p_read42(npub_u8_25_reg_1483),
    .p_read43(npub_u8_26_reg_1488),
    .p_read44(npub_u8_27_reg_1493),
    .p_read45(npub_u8_28_reg_1498),
    .p_read46(npub_u8_29_reg_1503),
    .p_read47(npub_u8_30_reg_1508),
    .p_read48(npub_u8_31_reg_1513),
    .p_read49(k_u8_16_reg_1598),
    .p_read50(k_u8_17_reg_1603),
    .p_read51(k_u8_18_reg_1608),
    .p_read52(k_u8_19_reg_1613),
    .p_read53(k_u8_20_reg_1618),
    .p_read54(k_u8_21_reg_1623),
    .p_read55(k_u8_22_reg_1628),
    .p_read56(k_u8_23_reg_1633),
    .p_read57(k_u8_24_reg_1638),
    .p_read58(k_u8_25_reg_1643),
    .p_read59(k_u8_26_reg_1648),
    .p_read60(k_u8_27_reg_1653),
    .p_read61(k_u8_28_reg_1658),
    .p_read62(k_u8_29_reg_1663),
    .p_read63(k_u8_30_reg_1668),
    .p_read64(k_u8_31_reg_1673)
);

axi_encrypt_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(32'd32),
    .c(c),
    .m(m),
    .ad(ad),
    .nsec(nsec),
    .npub(npub),
    .k(k)
);

axi_encrypt_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARLEN(gmem_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(64'd0),
    .I_WSTRB(8'd0),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(1'b0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_crypto_aead_encrypt_fu_462_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            grp_crypto_aead_encrypt_fu_462_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_fu_462_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_fu_462_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_u64_to_u8_array_fu_222_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state17) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == ap_NS_fsm_state15) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == ap_NS_fsm_state13) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == ap_NS_fsm_state11) & (1'b1 == ap_CS_fsm_state10)))) begin
            grp_u64_to_u8_array_fu_222_ap_start_reg <= 1'b1;
        end else if ((grp_u64_to_u8_array_fu_222_ap_ready == 1'b1)) begin
            grp_u64_to_u8_array_fu_222_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ad_u8_16_reg_1358 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_0;
        ad_u8_17_reg_1363 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_1;
        ad_u8_18_reg_1368 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_2;
        ad_u8_19_reg_1373 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_3;
        ad_u8_20_reg_1378 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_4;
        ad_u8_21_reg_1383 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_5;
        ad_u8_22_reg_1388 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_6;
        ad_u8_23_reg_1393 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_7;
        ad_u8_24_reg_1398 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_8;
        ad_u8_25_reg_1403 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_9;
        ad_u8_26_reg_1408 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_10;
        ad_u8_27_reg_1413 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_11;
        ad_u8_28_reg_1418 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_12;
        ad_u8_29_reg_1423 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_13;
        ad_u8_30_reg_1428 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_14;
        ad_u8_31_reg_1433 <= call_ret45_u64_to_u8_array_clone_fu_337_ap_return_15;
        k_u8_10_reg_1568 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_10;
        k_u8_11_reg_1573 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_11;
        k_u8_12_reg_1578 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_12;
        k_u8_13_reg_1583 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_13;
        k_u8_14_reg_1588 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_14;
        k_u8_15_reg_1593 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_15;
        k_u8_1_reg_1523 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_1;
        k_u8_2_reg_1528 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_2;
        k_u8_3_reg_1533 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_3;
        k_u8_4_reg_1538 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_4;
        k_u8_5_reg_1543 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_5;
        k_u8_6_reg_1548 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_6;
        k_u8_7_reg_1553 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_7;
        k_u8_8_reg_1558 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_8;
        k_u8_9_reg_1563 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_9;
        k_u8_reg_1518 <= call_ret48_u64_to_u8_array_clone_fu_422_ap_return_0;
        m_u8_16_reg_1278 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_0;
        m_u8_17_reg_1283 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_1;
        m_u8_18_reg_1288 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_2;
        m_u8_19_reg_1293 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_3;
        m_u8_20_reg_1298 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_4;
        m_u8_21_reg_1303 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_5;
        m_u8_22_reg_1308 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_6;
        m_u8_23_reg_1313 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_7;
        m_u8_24_reg_1318 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_8;
        m_u8_25_reg_1323 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_9;
        m_u8_26_reg_1328 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_10;
        m_u8_27_reg_1333 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_11;
        m_u8_28_reg_1338 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_12;
        m_u8_29_reg_1343 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_13;
        m_u8_30_reg_1348 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_14;
        m_u8_31_reg_1353 <= call_ret43_u64_to_u8_array_clone_fu_275_ap_return_15;
        npub_u8_16_reg_1438 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_0;
        npub_u8_17_reg_1443 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_1;
        npub_u8_18_reg_1448 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_2;
        npub_u8_19_reg_1453 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_3;
        npub_u8_20_reg_1458 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_4;
        npub_u8_21_reg_1463 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_5;
        npub_u8_22_reg_1468 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_6;
        npub_u8_23_reg_1473 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_7;
        npub_u8_24_reg_1478 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_8;
        npub_u8_25_reg_1483 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_9;
        npub_u8_26_reg_1488 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_10;
        npub_u8_27_reg_1493 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_11;
        npub_u8_28_reg_1498 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_12;
        npub_u8_29_reg_1503 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_13;
        npub_u8_30_reg_1508 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_14;
        npub_u8_31_reg_1513 <= call_ret47_u64_to_u8_array_clone_fu_399_ap_return_15;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        gmem_addr_1_read_1_reg_1253 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        gmem_addr_1_read_reg_1248 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        gmem_addr_2_read_1_reg_1263 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        gmem_addr_2_read_reg_1258 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        gmem_addr_4_read_1_reg_1273 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        gmem_addr_4_read_reg_1268 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        gmem_addr_read_2_reg_1243 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        k_u8_16_reg_1598 <= grp_u64_to_u8_array_clone_fu_236_ap_return_0;
        k_u8_17_reg_1603 <= grp_u64_to_u8_array_clone_fu_236_ap_return_1;
        k_u8_18_reg_1608 <= grp_u64_to_u8_array_clone_fu_236_ap_return_2;
        k_u8_19_reg_1613 <= grp_u64_to_u8_array_clone_fu_236_ap_return_3;
        k_u8_20_reg_1618 <= grp_u64_to_u8_array_clone_fu_236_ap_return_4;
        k_u8_21_reg_1623 <= grp_u64_to_u8_array_clone_fu_236_ap_return_5;
        k_u8_22_reg_1628 <= grp_u64_to_u8_array_clone_fu_236_ap_return_6;
        k_u8_23_reg_1633 <= grp_u64_to_u8_array_clone_fu_236_ap_return_7;
        k_u8_24_reg_1638 <= grp_u64_to_u8_array_clone_fu_236_ap_return_8;
        k_u8_25_reg_1643 <= grp_u64_to_u8_array_clone_fu_236_ap_return_9;
        k_u8_26_reg_1648 <= grp_u64_to_u8_array_clone_fu_236_ap_return_10;
        k_u8_27_reg_1653 <= grp_u64_to_u8_array_clone_fu_236_ap_return_11;
        k_u8_28_reg_1658 <= grp_u64_to_u8_array_clone_fu_236_ap_return_12;
        k_u8_29_reg_1663 <= grp_u64_to_u8_array_clone_fu_236_ap_return_13;
        k_u8_30_reg_1668 <= grp_u64_to_u8_array_clone_fu_236_ap_return_14;
        k_u8_31_reg_1673 <= grp_u64_to_u8_array_clone_fu_236_ap_return_15;
    end
end

always @ (posedge ap_clk) begin
    if ((((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | (~((gmem_RVALID == 1'b0) | (gmem_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state10)))) begin
        reg_630 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state22)))) begin
        reg_635 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln2_reg_1182 <= {{m[63:3]}};
        trunc_ln3_reg_1187 <= {{ad[63:3]}};
        trunc_ln4_reg_1192 <= {{nsec[63:3]}};
        trunc_ln5_reg_1197 <= {{npub[63:3]}};
        trunc_ln6_reg_1202 <= {{k[63:3]}};
        trunc_ln_reg_1177 <= {{c[63:3]}};
    end
end

always @ (*) begin
    if (((gmem_RVALID == 1'b0) | (gmem_ARREADY == 1'b0))) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state24_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_encrypt_fu_462_ap_done == 1'b0)) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_crypto_aead_encrypt_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_crypto_aead_encrypt_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_1_address0 = grp_crypto_aead_encrypt_fu_462_c_1_address0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_1_address0 = grp_u64_to_u8_array_fu_222_b_1_address0;
    end else begin
        c_u8_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_1_ce0 = grp_crypto_aead_encrypt_fu_462_c_1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_1_ce0 = grp_u64_to_u8_array_fu_222_b_1_ce0;
    end else begin
        c_u8_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_1_d0 = grp_crypto_aead_encrypt_fu_462_c_1_d0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_1_d0 = grp_u64_to_u8_array_fu_222_b_1_d0;
    end else begin
        c_u8_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_1_we0 = grp_crypto_aead_encrypt_fu_462_c_1_we0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_1_we0 = grp_u64_to_u8_array_fu_222_b_1_we0;
    end else begin
        c_u8_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_2_address0 = grp_crypto_aead_encrypt_fu_462_c_2_address0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_2_address0 = grp_u64_to_u8_array_fu_222_b_2_address0;
    end else begin
        c_u8_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_2_ce0 = grp_crypto_aead_encrypt_fu_462_c_2_ce0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_2_ce0 = grp_u64_to_u8_array_fu_222_b_2_ce0;
    end else begin
        c_u8_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_2_d0 = grp_crypto_aead_encrypt_fu_462_c_2_d0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_2_d0 = grp_u64_to_u8_array_fu_222_b_2_d0;
    end else begin
        c_u8_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_2_we0 = grp_crypto_aead_encrypt_fu_462_c_2_we0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_2_we0 = grp_u64_to_u8_array_fu_222_b_2_we0;
    end else begin
        c_u8_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_3_address0 = grp_crypto_aead_encrypt_fu_462_c_3_address0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_3_address0 = grp_u64_to_u8_array_fu_222_b_3_address0;
    end else begin
        c_u8_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_3_ce0 = grp_crypto_aead_encrypt_fu_462_c_3_ce0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_3_ce0 = grp_u64_to_u8_array_fu_222_b_3_ce0;
    end else begin
        c_u8_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_3_d0 = grp_crypto_aead_encrypt_fu_462_c_3_d0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_3_d0 = grp_u64_to_u8_array_fu_222_b_3_d0;
    end else begin
        c_u8_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_3_we0 = grp_crypto_aead_encrypt_fu_462_c_3_we0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_3_we0 = grp_u64_to_u8_array_fu_222_b_3_we0;
    end else begin
        c_u8_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_address0 = grp_crypto_aead_encrypt_fu_462_c_0_address0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_address0 = grp_u64_to_u8_array_fu_222_b_0_address0;
    end else begin
        c_u8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_ce0 = grp_crypto_aead_encrypt_fu_462_c_0_ce0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_ce0 = grp_u64_to_u8_array_fu_222_b_0_ce0;
    end else begin
        c_u8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_d0 = grp_crypto_aead_encrypt_fu_462_c_0_d0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_d0 = grp_u64_to_u8_array_fu_222_b_0_d0;
    end else begin
        c_u8_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c_u8_we0 = grp_crypto_aead_encrypt_fu_462_c_0_we0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        c_u8_we0 = grp_u64_to_u8_array_fu_222_b_0_we0;
    end else begin
        c_u8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem_RVALID == 1'b0) | (gmem_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARADDR = sext_ln142_fu_751_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        gmem_ARADDR = sext_ln139_fu_741_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        gmem_ARADDR = sext_ln136_fu_731_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        gmem_ARADDR = sext_ln133_fu_721_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARADDR = sext_ln130_fu_711_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARADDR = sext_ln125_fu_701_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((~((gmem_RVALID == 1'b0) | (gmem_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        gmem_ARLEN = 32'd2;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARLEN = 32'd4;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((~((gmem_RVALID == 1'b0) | (gmem_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | (~((gmem_RVALID == 1'b0) | (gmem_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state10)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_a = reg_635;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_a = gmem_addr_1_read_reg_1248;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_a = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_idx = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_idx = 4'd0;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_idx = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read = k_u8_reg_1518;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read1 = k_u8_1_reg_1523;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read1 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read10 = k_u8_10_reg_1568;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read10 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read10 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read11 = k_u8_11_reg_1573;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read11 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read11 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read12 = k_u8_12_reg_1578;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read12 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read12 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read13 = k_u8_13_reg_1583;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read13 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read13 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read14 = k_u8_14_reg_1588;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read14 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read14 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read15 = k_u8_15_reg_1593;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read15 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read15 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read2 = k_u8_2_reg_1528;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read2 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read3 = k_u8_3_reg_1533;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read3 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read3 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read4 = k_u8_4_reg_1538;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read4 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read5 = k_u8_5_reg_1543;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read5 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read6 = k_u8_6_reg_1548;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read6 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read7 = k_u8_7_reg_1553;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read7 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read7 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read8 = k_u8_8_reg_1558;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read8 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read8 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read9 = k_u8_9_reg_1563;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_u64_to_u8_array_clone_fu_236_p_read9 = 'bx;
    end else begin
        grp_u64_to_u8_array_clone_fu_236_p_read9 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_u64_to_u8_array_fu_222_a = gmem_addr_read_2_reg_1243;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_u64_to_u8_array_fu_222_a = reg_630;
    end else begin
        grp_u64_to_u8_array_fu_222_a = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        grp_u64_to_u8_array_fu_222_ap_ce = 1'b1;
    end else begin
        grp_u64_to_u8_array_fu_222_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_u64_to_u8_array_fu_222_idx = 5'd24;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_u64_to_u8_array_fu_222_idx = 5'd16;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_u64_to_u8_array_fu_222_idx = 5'd8;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_u64_to_u8_array_fu_222_idx = 5'd0;
    end else begin
        grp_u64_to_u8_array_fu_222_idx = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((gmem_RVALID == 1'b0) | (gmem_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((grp_crypto_aead_encrypt_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state11 = ap_NS_fsm[32'd10];

assign ap_NS_fsm_state13 = ap_NS_fsm[32'd12];

assign ap_NS_fsm_state15 = ap_NS_fsm[32'd14];

assign ap_NS_fsm_state17 = ap_NS_fsm[32'd16];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read1 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read10 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read11 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read12 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read13 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read14 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read15 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read2 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read3 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read4 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read5 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read6 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read7 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read8 = 'bx;

assign call_ret44_u64_to_u8_array_clone_fu_298_p_read9 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read1 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read10 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read11 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read12 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read13 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read14 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read15 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read2 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read3 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read4 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read5 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read6 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read7 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read8 = 'bx;

assign call_ret46_u64_to_u8_array_clone_fu_360_p_read9 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read1 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read10 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read11 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read12 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read13 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read14 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read15 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read2 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read3 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read4 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read5 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read6 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read7 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read8 = 'bx;

assign call_ret48_u64_to_u8_array_clone_fu_422_p_read9 = 'bx;

assign grp_crypto_aead_encrypt_fu_462_ap_start = grp_crypto_aead_encrypt_fu_462_ap_start_reg;

assign grp_u64_to_u8_array_fu_222_ap_start = grp_u64_to_u8_array_fu_222_ap_start_reg;

assign sext_ln125_fu_701_p1 = $signed(trunc_ln_reg_1177);

assign sext_ln130_fu_711_p1 = $signed(trunc_ln2_reg_1182);

assign sext_ln133_fu_721_p1 = $signed(trunc_ln3_reg_1187);

assign sext_ln136_fu_731_p1 = $signed(trunc_ln4_reg_1192);

assign sext_ln139_fu_741_p1 = $signed(trunc_ln5_reg_1197);

assign sext_ln142_fu_751_p1 = $signed(trunc_ln6_reg_1202);

endmodule //axi_encrypt
