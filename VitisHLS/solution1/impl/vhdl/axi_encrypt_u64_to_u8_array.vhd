-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity axi_encrypt_u64_to_u8_array is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (63 downto 0);
    b_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    b_0_ce0 : OUT STD_LOGIC;
    b_0_we0 : OUT STD_LOGIC;
    b_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    b_1_ce0 : OUT STD_LOGIC;
    b_1_we0 : OUT STD_LOGIC;
    b_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    b_2_ce0 : OUT STD_LOGIC;
    b_2_we0 : OUT STD_LOGIC;
    b_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    b_3_ce0 : OUT STD_LOGIC;
    b_3_we0 : OUT STD_LOGIC;
    b_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    idx : IN STD_LOGIC_VECTOR (4 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of axi_encrypt_u64_to_u8_array is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal empty_fu_354_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_reg_634 : STD_LOGIC_VECTOR (1 downto 0);
    signal b_0_addr_reg_638 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_1_addr_reg_643 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_addr_reg_648 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_3_addr_reg_653 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln13_1_reg_658 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_0_addr_5_reg_666 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_1_addr_5_reg_671 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_addr_5_reg_676 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_3_addr_5_reg_681 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln13_2_reg_686 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_0_addr_6_reg_694 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_1_addr_6_reg_699 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_addr_6_reg_704 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_3_addr_6_reg_709 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln13_3_reg_714 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_0_addr_7_reg_722 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_1_addr_7_reg_727 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_addr_7_reg_732 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_3_addr_7_reg_737 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln13_4_reg_742 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln7_fu_410_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_fu_436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_1_fu_468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_2_fu_500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_3_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_4_fu_560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_5_fu_588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_6_fu_616_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln13_fu_418_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal lshr_ln7_fu_400_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_6_fu_394_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln_fu_426_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_5_fu_388_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln13_8_fu_458_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_4_fu_382_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln13_s_fu_490_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_3_fu_376_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln13_1_fu_522_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_2_fu_370_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln13_2_fu_550_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_1_fu_364_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln13_3_fu_578_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_fu_358_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln13_4_fu_606_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                b_0_addr_5_reg_666 <= zext_ln13_4_fu_560_p1(3 - 1 downto 0);
                b_0_addr_6_reg_694 <= zext_ln13_5_fu_588_p1(3 - 1 downto 0);
                b_0_addr_7_reg_722 <= zext_ln13_6_fu_616_p1(3 - 1 downto 0);
                b_0_addr_reg_638 <= zext_ln7_fu_410_p1(3 - 1 downto 0);
                b_1_addr_5_reg_671 <= zext_ln13_4_fu_560_p1(3 - 1 downto 0);
                b_1_addr_6_reg_699 <= zext_ln13_5_fu_588_p1(3 - 1 downto 0);
                b_1_addr_7_reg_727 <= zext_ln13_6_fu_616_p1(3 - 1 downto 0);
                b_1_addr_reg_643 <= zext_ln7_fu_410_p1(3 - 1 downto 0);
                b_2_addr_5_reg_676 <= zext_ln13_4_fu_560_p1(3 - 1 downto 0);
                b_2_addr_6_reg_704 <= zext_ln13_5_fu_588_p1(3 - 1 downto 0);
                b_2_addr_7_reg_732 <= zext_ln13_6_fu_616_p1(3 - 1 downto 0);
                b_2_addr_reg_648 <= zext_ln7_fu_410_p1(3 - 1 downto 0);
                b_3_addr_5_reg_681 <= zext_ln13_4_fu_560_p1(3 - 1 downto 0);
                b_3_addr_6_reg_709 <= zext_ln13_5_fu_588_p1(3 - 1 downto 0);
                b_3_addr_7_reg_737 <= zext_ln13_6_fu_616_p1(3 - 1 downto 0);
                b_3_addr_reg_653 <= zext_ln7_fu_410_p1(3 - 1 downto 0);
                empty_reg_634 <= empty_fu_354_p1;
                trunc_ln13_1_reg_658 <= a(39 downto 32);
                trunc_ln13_2_reg_686 <= a(47 downto 40);
                trunc_ln13_3_reg_714 <= a(55 downto 48);
                trunc_ln13_4_reg_742 <= a(63 downto 56);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln7_1_fu_364_p2 <= std_logic_vector(unsigned(idx) + unsigned(ap_const_lv5_2));
    add_ln7_2_fu_370_p2 <= std_logic_vector(unsigned(idx) + unsigned(ap_const_lv5_3));
    add_ln7_3_fu_376_p2 <= std_logic_vector(unsigned(idx) + unsigned(ap_const_lv5_4));
    add_ln7_4_fu_382_p2 <= std_logic_vector(unsigned(idx) + unsigned(ap_const_lv5_5));
    add_ln7_5_fu_388_p2 <= std_logic_vector(unsigned(idx) + unsigned(ap_const_lv5_6));
    add_ln7_6_fu_394_p2 <= std_logic_vector(unsigned(idx) + unsigned(ap_const_lv5_7));
    add_ln7_fu_358_p2 <= std_logic_vector(unsigned(idx) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_ce)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_const_logic_0 = ap_ce))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_ce, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    b_0_address0_assign_proc : process(ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, b_0_addr_reg_638, b_0_addr_5_reg_666, b_0_addr_6_reg_694, b_0_addr_7_reg_722, zext_ln13_fu_436_p1, zext_ln13_1_fu_468_p1, zext_ln13_2_fu_500_p1, zext_ln13_3_fu_532_p1, ap_CS_fsm_state2)
    begin
        if (((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_0_address0 <= b_0_addr_7_reg_722;
        elsif (((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_0_address0 <= b_0_addr_5_reg_666;
        elsif (((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_0_address0 <= b_0_addr_6_reg_694;
        elsif (((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_0_address0 <= b_0_addr_reg_638;
        elsif (((empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_0_address0 <= zext_ln13_2_fu_500_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_0_address0 <= zext_ln13_fu_436_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_0_address0 <= zext_ln13_1_fu_468_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_0_address0 <= zext_ln13_3_fu_532_p1(3 - 1 downto 0);
        else 
            b_0_address0 <= "XXX";
        end if; 
    end process;


    b_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, ap_ce, ap_CS_fsm_state2)
    begin
        if ((((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_0_ce0 <= ap_const_logic_1;
        else 
            b_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_0_d0_assign_proc : process(ap_CS_fsm_state1, a, empty_fu_354_p1, empty_reg_634, trunc_ln13_1_reg_658, trunc_ln13_2_reg_686, trunc_ln13_3_reg_714, trunc_ln13_4_reg_742, trunc_ln13_fu_418_p1, ap_CS_fsm_state2)
    begin
        if (((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_0_d0 <= trunc_ln13_3_reg_714;
        elsif (((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_0_d0 <= trunc_ln13_1_reg_658;
        elsif (((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_0_d0 <= trunc_ln13_2_reg_686;
        elsif (((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_0_d0 <= trunc_ln13_4_reg_742;
        elsif (((empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_0_d0 <= a(23 downto 16);
        elsif (((empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_0_d0 <= trunc_ln13_fu_418_p1;
        elsif (((empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_0_d0 <= a(15 downto 8);
        elsif (((empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_0_d0 <= a(31 downto 24);
        else 
            b_0_d0 <= "XXXXXXXX";
        end if; 
    end process;


    b_0_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, ap_ce, ap_CS_fsm_state2)
    begin
        if ((((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_0_we0 <= ap_const_logic_1;
        else 
            b_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_address0_assign_proc : process(ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, b_1_addr_reg_643, b_1_addr_5_reg_671, b_1_addr_6_reg_699, b_1_addr_7_reg_727, zext_ln13_fu_436_p1, zext_ln13_1_fu_468_p1, zext_ln13_2_fu_500_p1, zext_ln13_3_fu_532_p1, ap_CS_fsm_state2)
    begin
        if (((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_1_address0 <= b_1_addr_6_reg_699;
        elsif (((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_1_address0 <= b_1_addr_reg_643;
        elsif (((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_1_address0 <= b_1_addr_5_reg_671;
        elsif (((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_1_address0 <= b_1_addr_7_reg_727;
        elsif (((empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_1_address0 <= zext_ln13_1_fu_468_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_1_address0 <= zext_ln13_3_fu_532_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_1_address0 <= zext_ln13_fu_436_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_1_address0 <= zext_ln13_2_fu_500_p1(3 - 1 downto 0);
        else 
            b_1_address0 <= "XXX";
        end if; 
    end process;


    b_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, ap_ce, ap_CS_fsm_state2)
    begin
        if ((((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_1_ce0 <= ap_const_logic_1;
        else 
            b_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_d0_assign_proc : process(ap_CS_fsm_state1, a, empty_fu_354_p1, empty_reg_634, trunc_ln13_1_reg_658, trunc_ln13_2_reg_686, trunc_ln13_3_reg_714, trunc_ln13_4_reg_742, trunc_ln13_fu_418_p1, ap_CS_fsm_state2)
    begin
        if (((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_1_d0 <= trunc_ln13_2_reg_686;
        elsif (((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_1_d0 <= trunc_ln13_4_reg_742;
        elsif (((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_1_d0 <= trunc_ln13_1_reg_658;
        elsif (((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_1_d0 <= trunc_ln13_3_reg_714;
        elsif (((empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_1_d0 <= a(15 downto 8);
        elsif (((empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_1_d0 <= a(31 downto 24);
        elsif (((empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_1_d0 <= trunc_ln13_fu_418_p1;
        elsif (((empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_1_d0 <= a(23 downto 16);
        else 
            b_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    b_1_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, ap_ce, ap_CS_fsm_state2)
    begin
        if ((((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_1_we0 <= ap_const_logic_1;
        else 
            b_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_2_address0_assign_proc : process(ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, b_2_addr_reg_648, b_2_addr_5_reg_676, b_2_addr_6_reg_704, b_2_addr_7_reg_732, zext_ln13_fu_436_p1, zext_ln13_1_fu_468_p1, zext_ln13_2_fu_500_p1, zext_ln13_3_fu_532_p1, ap_CS_fsm_state2)
    begin
        if (((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_2_address0 <= b_2_addr_5_reg_676;
        elsif (((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_2_address0 <= b_2_addr_7_reg_732;
        elsif (((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_2_address0 <= b_2_addr_reg_648;
        elsif (((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_2_address0 <= b_2_addr_6_reg_704;
        elsif (((empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_2_address0 <= zext_ln13_fu_436_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_2_address0 <= zext_ln13_2_fu_500_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_2_address0 <= zext_ln13_3_fu_532_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_2_address0 <= zext_ln13_1_fu_468_p1(3 - 1 downto 0);
        else 
            b_2_address0 <= "XXX";
        end if; 
    end process;


    b_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, ap_ce, ap_CS_fsm_state2)
    begin
        if ((((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_2_ce0 <= ap_const_logic_1;
        else 
            b_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_2_d0_assign_proc : process(ap_CS_fsm_state1, a, empty_fu_354_p1, empty_reg_634, trunc_ln13_1_reg_658, trunc_ln13_2_reg_686, trunc_ln13_3_reg_714, trunc_ln13_4_reg_742, trunc_ln13_fu_418_p1, ap_CS_fsm_state2)
    begin
        if (((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_2_d0 <= trunc_ln13_1_reg_658;
        elsif (((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_2_d0 <= trunc_ln13_3_reg_714;
        elsif (((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_2_d0 <= trunc_ln13_4_reg_742;
        elsif (((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_2_d0 <= trunc_ln13_2_reg_686;
        elsif (((empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_2_d0 <= trunc_ln13_fu_418_p1;
        elsif (((empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_2_d0 <= a(23 downto 16);
        elsif (((empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_2_d0 <= a(31 downto 24);
        elsif (((empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_2_d0 <= a(15 downto 8);
        else 
            b_2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    b_2_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, ap_ce, ap_CS_fsm_state2)
    begin
        if ((((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_2_we0 <= ap_const_logic_1;
        else 
            b_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_3_address0_assign_proc : process(ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, b_3_addr_reg_653, b_3_addr_5_reg_681, b_3_addr_6_reg_709, b_3_addr_7_reg_737, zext_ln13_fu_436_p1, zext_ln13_1_fu_468_p1, zext_ln13_2_fu_500_p1, zext_ln13_3_fu_532_p1, ap_CS_fsm_state2)
    begin
        if (((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_3_address0 <= b_3_addr_reg_653;
        elsif (((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_3_address0 <= b_3_addr_6_reg_709;
        elsif (((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_3_address0 <= b_3_addr_7_reg_737;
        elsif (((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_3_address0 <= b_3_addr_5_reg_681;
        elsif (((empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_3_address0 <= zext_ln13_3_fu_532_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_3_address0 <= zext_ln13_1_fu_468_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_3_address0 <= zext_ln13_2_fu_500_p1(3 - 1 downto 0);
        elsif (((empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_3_address0 <= zext_ln13_fu_436_p1(3 - 1 downto 0);
        else 
            b_3_address0 <= "XXX";
        end if; 
    end process;


    b_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, ap_ce, ap_CS_fsm_state2)
    begin
        if ((((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_3_ce0 <= ap_const_logic_1;
        else 
            b_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_3_d0_assign_proc : process(ap_CS_fsm_state1, a, empty_fu_354_p1, empty_reg_634, trunc_ln13_1_reg_658, trunc_ln13_2_reg_686, trunc_ln13_3_reg_714, trunc_ln13_4_reg_742, trunc_ln13_fu_418_p1, ap_CS_fsm_state2)
    begin
        if (((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_3_d0 <= trunc_ln13_4_reg_742;
        elsif (((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_3_d0 <= trunc_ln13_2_reg_686;
        elsif (((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_3_d0 <= trunc_ln13_3_reg_714;
        elsif (((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_3_d0 <= trunc_ln13_1_reg_658;
        elsif (((empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_3_d0 <= a(31 downto 24);
        elsif (((empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_3_d0 <= a(15 downto 8);
        elsif (((empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_3_d0 <= a(23 downto 16);
        elsif (((empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            b_3_d0 <= trunc_ln13_fu_418_p1;
        else 
            b_3_d0 <= "XXXXXXXX";
        end if; 
    end process;


    b_3_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, empty_fu_354_p1, empty_reg_634, ap_ce, ap_CS_fsm_state2)
    begin
        if ((((empty_reg_634 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((empty_reg_634 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (empty_fu_354_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_3_we0 <= ap_const_logic_1;
        else 
            b_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_354_p1 <= idx(2 - 1 downto 0);
    lshr_ln13_1_fu_522_p4 <= add_ln7_3_fu_376_p2(4 downto 2);
    lshr_ln13_2_fu_550_p4 <= add_ln7_2_fu_370_p2(4 downto 2);
    lshr_ln13_3_fu_578_p4 <= add_ln7_1_fu_364_p2(4 downto 2);
    lshr_ln13_4_fu_606_p4 <= add_ln7_fu_358_p2(4 downto 2);
    lshr_ln13_8_fu_458_p4 <= add_ln7_5_fu_388_p2(4 downto 2);
    lshr_ln13_s_fu_490_p4 <= add_ln7_4_fu_382_p2(4 downto 2);
    lshr_ln7_fu_400_p4 <= idx(4 downto 2);
    lshr_ln_fu_426_p4 <= add_ln7_6_fu_394_p2(4 downto 2);
    trunc_ln13_fu_418_p1 <= a(8 - 1 downto 0);
    zext_ln13_1_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln13_8_fu_458_p4),64));
    zext_ln13_2_fu_500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln13_s_fu_490_p4),64));
    zext_ln13_3_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln13_1_fu_522_p4),64));
    zext_ln13_4_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln13_2_fu_550_p4),64));
    zext_ln13_5_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln13_3_fu_578_p4),64));
    zext_ln13_6_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln13_4_fu_606_p4),64));
    zext_ln13_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_426_p4),64));
    zext_ln7_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln7_fu_400_p4),64));
end behav;
